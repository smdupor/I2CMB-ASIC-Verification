                     Release Notes For Questa Sim 2020.2

                                 Apr 19 2020
               Copyright 1991-2020 Mentor Graphics Corporation
                            All rights reserved.
      This document contains information that is proprietary to Mentor
                                  Graphics
   Corporation. The original recipient of this document may duplicate this
      document in whole or in part for internal business purposes only,
                                  provided
   that this entire notice appears in all copies. In duplicating any part
                                     of
    this document the recipient agrees to make every reasonable effort to
      prevent the unauthorized use and distribution of the proprietary
                                information.
     TRADEMARKS: The trademarks, logos and service marks ("Marks") used
                                   herein
   are the property of Mentor Graphics Corporation or other third parties.
      No one is permitted to use these Marks without the prior written
                                   consent
   of Mentor Graphics or the respective third-party owner. The use herein
   of a third-party Mark is not an attempt to indicate Mentor Graphics as
                                      a
     source of a product, but is intended to indicate a product from, or
   associated with, a particular third party. The following are trademarks
                                     of
    of Mentor Graphics Corporation: Questa, ModelSim, JobSpy, and Signal
                                    Spy.
        A current list of Mentor Graphics trademarks may be viewed at
               www.mentor.com/terms_conditions/trademarks.cfm.
      End-User License Agreement: You can print a copy of the End-User
                                   License
        Agreement from: www.mentor.com/terms_conditions/enduser.cfm.
   _______________________________________________________________________

     * How to Get Support
       For information on how to obtain technical support, visit the
       support page at
       [1]http://supportnet.mentor.com
   _______________________________________________________________________

  Index to Release Notes

     * [2]Key Information
     * [3]Release Announcements in 2020.2
     * [4]Base Product Specifications in 2020.2
     * [5]Compatibility Issues with Release 2020.2
     * [6]SystemVerilog Defects Repaired in 2020.2
     * [7]VHDL Defects Repaired in 2020.2
     * [8]Mixed Language Defects Repaired in 2020.2
     * [9]Verification Management Defects Repaired in 2020.2
     * [10]SystemVerilog Enhancements in 2020.2
     * [11]VHDL Enhancements in 2020.2
     * [12]Mixed Language Enhancements in 2020.2
     * [13]Document Revision History in 2020.2
   _______________________________________________________________________

   Key Information
     * QSIM-555 - Systemc/GCC Changes starting 2020.1:
       o SystemC/DPI/PLI/VPI/FLI default compiler (GCC) for linux and
       linux_x86_64 platforms is upgraded to 7.4.0
       o GCC 4.5.0 is no longer supported and it will no longer be
       distributed with the release. This affects linux and linux_x86_64
       platforms only.
       o Supported compilers on linux and linux_x86_64 platforms:
       gcc-7.4.0, gcc-5.3.0 and gcc-4.7.4
       o Support for the IEEE 1666-2005 SystemC-2.2 standard has been
       deprecated and it is no longer supported.
     * Starting 2021.1 release, Redhat Enterprise Linux (RHEL) 6 platform
       will not be supported.
     * The Register Assistant version included within this release ha been
       upgraded to RUVM/2020.2.
       RUVM/2020.2 is a native 64-bit application.
   _______________________________________________________________________

   Release Announcements in 2020.2
     * Due to enhanced security restrictions with web browser PDF
       plug-ins, some links do not function. Links in HTML documentation
       are fully functional.
       Clicking a link within a PDF viewed in a web browser may result in
       no action, or it may load the title page of the current PDF manual
       (instead of the intended target in the PDF manual). The unresolved
       link behavior occurs in all web browsers on Windows and Linux
       platforms. Because of this behavior, the navigational experience of
       PDF manuals is compromised. PDF is ideal for printing because of
       its page-oriented layout.
       Use the HTML manuals to search for topics, navigate between topics,
       and click links to examples, videos, reference material, and other
       related technical content.
       For information about Adobe's discontinued support of Adobe Reader
       on Linux platforms and your available options, refer to Knowledge
       Article MG596568 on SupportNet.
       Linux is a registered trademark of Linus Torvalds in the U.S. and
       other countries.
     * Since 2019.1 release, support for Windows 7 and 8.1 have
       discontinued. Only Windows 10 is supported. However, we continue to
       support Windows 7 & 8.1 with our 10.7 release series until their
       planned End Of Life (10.7 EOL - mid 2020)
     * Starting 2020.2 release, support for Universal VHDL Verification
       Methodology has been added to Questa Simulation.
       The UVVM library is included in this download
   _______________________________________________________________________

   Base Product Specifications in 2020.2
     * [Supported Platforms]
       Linux RHEL 6 x86/x86-64
       Linux RHEL 7 x86/x86-64
       Linux RHEL 8 x86/x86-64
       Linux SLES 11 x86/x86-64
       Linux SLES 12 x86/x86-64
       Windows 10 x86/x64
       [Supported GCC Compilers (for SystemC)]
       gcc-7.4.0-linux/gcc-7.4.0-linux_x86_64
       gcc-5.3.0-linux/gcc-5.3.0-linux_x86_64
       gcc-4.7.4-linux/gcc-4.7.4-linux_x86_64
       gcc-4.2.1-mingw32vc12
       [OVL (shipped with product)]
       v2.8.1
       [VHDL OSVVM (shipped with product)]
       v2014.07
       [VHDL UVVM (shipped with product)]
       UVVM v2019.11.25
       [Licensing]
       FLEXnet v11.16.4.0
       MSL v2019_3
       MGLS v9.22_3.1.0
       PCLS v9.22.3.1.0
   _______________________________________________________________________

   Compatibility Issues with Release 2020.2

   SystemVerilog Compatibility
     * QSIM-62044 - (results) Change ternary operator with X condition and
       non-matching real operands to evaluate to 0.0 as specified by the
       LRM.
     * QSIM-60936 - (results) When iterating through the systf parameters
       with vpi, when a parameter was encountered that was a protected
       object, and error message was issued, NULL was returned, and the
       iterator was destroyed. This was wrong as per 2012 LRM, 37.40,
       detail #10:
       10) System task and function calls that are protected shall allow
       iteration over the vpiArgument relationship.
       This had been fixed.
     * QSIM-60936 - (results) Forcing protected objects in vpi in prior
       Questa releases was allowed, despite non-compliance with the LRM.
       Now, vpi forcing of protected objects. Is NOT allowed.
     * QSIM-60936 - (results) vpi forcing of protected objects resulted in
       a write access error. This was changed to be more specific; a
       protected access error.
     * QSIM-62161 - (results) In some rare cases, randomize() would
       incorrectly evaluate a constraint involving a dist/inside/unique
       construct with an indexed multi-dimensional array (where the index
       is random) on the RHS. This issue has been fixed.
     * QSIM-62298 - (results) In some rare cases, randomize() would
       produce an invalid solution when evaluating a constraint involving
       a dist/inside/unique where the RHS is a non-random unpacked array.
       This issue has been fixed.
     * QSIM-62229 - (results) In some cases, randomize() would incorrectly
       evaluate iterative (foreach) constraints on multi-dimensional
       arrays, where one or more array dimensions are dynamic, if the
       array is specified using non-LRM compliant syntax (e.g.
       "foreach(a[0][i])"). This issue has been fixed.
     * QSIM-61574 - (results) Removed the environment variable
       "MTI_USE_DECL_PORT_VAR" that is used to turn ports into wires when
       it is compatiable for non-ANSI port list. Now this functionality is
       achieved using -svinputport=compat for ANSI and non-ANSI port
       lists.
     * QSIM-60165 - (results) The output of the -solvefaildebug constraint
       contradiction report has been improved when outputting information
       about variables/constraints involving packed structs. In the past,
       individual fields of packed structs were displayed as part-selects
       by the constraint contradiction report. The report now displays
       these as field names (where possible) improving the readability of
       the report.

   VHDL Compatibility
     * QSIM-61007 - (results) It is not legal to connect ports in a port
       map with sub-element association to OPEN, even if all sub-elements
       are OPEN. This enhancement allows for unconstrained ports to be
       associated with sub-elements as long as all sub-elements associated
       to OPEN.
       This is to allow the unconstrained port to be given a constraint.
       Statements like

     PORT MAP( OUT(1) => OPEN) -- Constrains out to (1 to 1)
     PORT MAP( OUT(1 to 2) => OPEN) -- Constrains out to ( 1 to 2)
       Note that the direction of the unconstrained port is the direction
       of the index range subtype and is usually TO not DOWNTO.

   Mixed Language Compatibility
     * VISU-18661 - (source, results) With 2020.2 onwards Verilog-AMS
       event argument list has been supported for debug purposes, This
       will break the forward compatibility (2020.2 generated design.bin
       can not be loaded from 2020.1 visualizer) where as backward
       compatibility will be intact (2020.1 generated design.bin can be
       loaded from 2020.2 visualizer).

   Verification Management Compatibility
     * [nodvtid] - (results) Modified VRM to truncate coverage numbers (as
       opposed to rounding) in order to match the other coverage reporting
       tools.
   _______________________________________________________________________

   SystemVerilog Defects Repaired in 2020.2
     * QSIM-62044 - (results) Change ternary operator with X condition and
       non-matching real operands to evaluate to 0.0 as specified by the
       LRM.
     * QSIM-60936 - (results) When iterating through the systf parameters
       with vpi, when a parameter was encountered that was a protected
       object, and error message was issued, NULL was returned, and the
       iterator was destroyed. This was wrong as per 2012 LRM, 37.40,
       detail #10:
       10) System task and function calls that are protected shall allow
       iteration over the vpiArgument relationship.
       This had been fixed.
     * QSIM-60936 - (results) Forcing protected objects in vpi in prior
       Questa releases was allowed, despite non-compliance with the LRM.
       Now, vpi forcing of protected objects. Is NOT allowed.
     * QSIM-60936 - (results) vpi forcing of protected objects resulted in
       a write access error. This was changed to be more specific; a
       protected access error.
     * QSIM-62161 - (results) In some rare cases, randomize() would
       incorrectly evaluate a constraint involving a dist/inside/unique
       construct with an indexed multi-dimensional array (where the index
       is random) on the RHS. This issue has been fixed.
     * QSIM-62470 - In some rare cases, a randomize() call with an in-line
       constraint that references a static class field would cause vopt to
       crash. This issue has been fixed.
     * QSIM-62421 - In some rare cases, many repeated calls to randomize()
       on a class with a 'rand' class field that toggles between NULL and
       non-NULL would cause vsim to crash. This issue has been fixed.
     * QSIM-62298 - (results) In some rare cases, randomize() would
       produce an invalid solution when evaluating a constraint involving
       a dist/inside/unique where the RHS is a non-random unpacked array.
       This issue has been fixed.
     * QSIM-62271 - In some rare cases, randomize() would cause vsim to
       crash when evaluating a constraint involving a dist/inside/unique
       where the RHS is a non-random unpacked array. This issue has been
       fixed.
     * QSIM-62382 - In some rare cases, randomize() would trigger a
       spurious error (vsim-7066: Index out of bounds) when evaluating
       constraints involving indexed arrays. This issue has been fixed.
     * QSIM-62229 - (results) In some cases, randomize() would incorrectly
       evaluate iterative (foreach) constraints on multi-dimensional
       arrays, where one or more array dimensions are dynamic, if the
       array is specified using non-LRM compliant syntax (e.g.
       "foreach(a[0][i])"). This issue has been fixed.
     * QSIM-62312 - In some rare cases, randomize() would cause vsim to
       crash when evaluating a constraint involving an associative array
       with a random index. This issue has been fixed.
     * [nodvtid] - Vsim could sometimes give this error when declaring an
       out-of-body class function where the return type referenced another
       parameterized class using "classname::"

     Error: foo.sv(12): Questa has encountered an unexpected internal
     error: ../../src/vlog/vgencode.c(225). Please contact Questa support
     at [14]http://supportnet.mentor.com/
     * QSIM-61574 - (results) Removed the environment variable
       "MTI_USE_DECL_PORT_VAR" that is used to turn ports into wires when
       it is compatiable for non-ANSI port list. Now this functionality is
       achieved using -svinputport=compat for ANSI and non-ANSI port
       lists.
     * QSIM-62117 - In some rare cases, an internal error would occur when
       randomize() is evaluating a 'dist' constraint with a non-random
       LHS. This issue has been fixed.
     * QSIM-62480 - Significantly improved performance for some
       randomize() calls involving if/else constraints where the implicate
       (condition is true) and alternate (condition is false) constraints
       are equivalent (but not identical).
     * QSIM-62633 - In some rare cases, randomize() would select an
       invalid solution for a scenario involving a '!inside' constraint
       where a non-random unpacked array is specified on the RHS of the
       'inside' operator. This issue has been fixed.
     * QSIM-62967 - In some cases, randomize() would incorrectly evaluate
       a scenario involving a random unpacked array of unpacked elements
       if the array is declared with descending indices. This issue has
       been fixed.
     * QSIM-63224 - In some rare cases, randomize() would issue an
       internal error or crash when -solvefaildebug=2 is enabled. This
       issue has been fixed.
     * QSIM-63296 - In some rare cases, randomize() would select an
       invalid solution when evaluating a constraint expression involving
       an arithmetic shift-right operator. This issue has been fixed.
     * QSIM-63333 - In some rare cases, randomize() would trigger a SIGFPE
       or SIVSEGV crash. This issue has been fixed.
   _______________________________________________________________________

   VHDL Defects Repaired in 2020.2
     * QSIM-14709 - In certain cases, calling functions with Records as
       arguments led to a crash. This has been fixed.
     * QSIM-56666 - In certain cases when connecting a vhdl signal by ('0)
       at system verilog side, an incorrect error was reported. this has
       been fixed.
     * QSIM-60929 - For some specific cases when "-error 1246" option is
       specified in vcom or vopt options. Vopt used to give null range
       error incorrectly for standard libraries. This has been fixed.
     * QSIM-59832 - For some specific cases of vsim restart flow, vsim use
       to crash. This has been fixed.
     * QSIM-59718 - For some specific cases of nested vhdl packages
       compiled with -mixedsvvh, vcom use to crash . This has been fixed.
     * QSIM-62149 - Using VHDL-2008, vopt would crash if an array of whose
       element subtype is not fully constrained is sliced. This would
       occur if the value of the slice is needed for elaboration.
     * QSIM-61842 - For some specific cases of load elab flow when
       combined with restart flow , Vsim used to crash. This has been
       fixed
     * QSIM-62768 - When using the -skip or -just option, comments that
       are followed by an empty line, would cause vcom to start processing
       a design unit's source early. This could result in compile time
       errors.
     * QSIM-12717 - Fixed a bug for Configuration optimization for
       entities with Generics.
     * QSIM-59843 - Fixed a bug when passing Generic value in Based
       Literal format from vsim command.
   _______________________________________________________________________

   Mixed Language Defects Repaired in 2020.2
     * QSIM-62637 - A VHDL configuration binding a VHDL component to a
       Verilog module located the initial work library could cause vopt to
       crash or machine code not to be found at simulation time.
   _______________________________________________________________________

   Verification Management Defects Repaired in 2020.2
     * [nodvtid] - (results) Modified VRM to truncate coverage numbers (as
       opposed to rounding) in order to match the other coverage reporting
       tools.
   _______________________________________________________________________

   SystemVerilog Enhancements in 2020.2
     * QSIM-62297 - In the past, randomize() calls involving a constraint
       having a function call with a non-random unpacked array argument
       would elicit an error at compile time. The restriction on unpacked
       arrays as arguments to a function calls in a constraints has been
       eased -- these constructs are now allowed and evaluated.
     * QSIM-60165 - (results) The output of the -solvefaildebug constraint
       contradiction report has been improved when outputting information
       about variables/constraints involving packed structs. In the past,
       individual fields of packed structs were displayed as part-selects
       by the constraint contradiction report. The report now displays
       these as field names (where possible) improving the readability of
       the report.
     * QSIM-62655 - Significantly improved the performance of randomize()
       calls for scenarios involving constraints that refer to non-random
       indexed unpacked arrays.
     * QSIM-62009 - Improved usability of the RNG trace feature:
       - Allow POSIX-style regular expressions with -rngtraceprocessfilter
       and -rngtraceclassfilter (note: not supported on Windows platforms)
       - Show only 'class' operations when when -rngtraceclassfilter is
       specified
       - RNG trace reports changes to RNG state due to class::srandom()
       and class::set_randstate() as 'process' operations (instead of
       'class' operations)
       - Support qualifying a breakpoint with a randstate value via the
       "-randstate <string>" option for the vsim bp (breakpoint) command
       See section "RNG Trace" of the user manual for additional details.
     * QSIM-62010 - Improved usability of the Solver record and replay
       feature:
       - Support additional SystemVerilog random constructs: $urandom,
       $urandom_range, array::shuffle(), randcase, randsequence
       - Support real-type random variables (requires 'svrnm' license
       feature)
       - Option to validate randomize() call during replay as being
       identical to the randomize() call as recorded (via
       "-solvereplayopt=+validate")
       See section "Solver Record and Replay" in the user's manual for
       additional details.
     * QSIM-63295 - Support for $countbits system function calls with a
       random control-bit arguments are now supported in constraints.
   _______________________________________________________________________

   VHDL Enhancements in 2020.2
     * QSIM-58870 - -displaymsgmode vhsupresswrite , will suppress the
       output of write/writeline vhdl function to the transcript.
     * QSIM-61007 - (results) It is not legal to connect ports in a port
       map with sub-element association to OPEN, even if all sub-elements
       are OPEN. This enhancement allows for unconstrained ports to be
       associated with sub-elements as long as all sub-elements associated
       to OPEN.
       This is to allow the unconstrained port to be given a constraint.
       Statements like

     PORT MAP( OUT(1) => OPEN) -- Constrains out to (1 to 1)
     PORT MAP( OUT(1 to 2) => OPEN) -- Constrains out to ( 1 to 2)
       Note that the direction of the unconstrained port is the direction
       of the index range subtype and is usually TO not DOWNTO.

     * QSIM-63367 - A new directory examples/vhdl/uvvm to show how the
       UVVM (Universal VHDL Verification Methodology) works for VHDL.
       Please consult the README_FOR_EXAMPLES.txt on how to run the
       examples.
   _______________________________________________________________________

   Mixed Language Enhancements in 2020.2
     * VISU-18661 - (source, results) With 2020.2 onwards Verilog-AMS
       event argument list has been supported for debug purposes, This
       will break the forward compatibility (2020.2 generated design.bin
       can not be loaded from 2020.1 visualizer) where as backward
       compatibility will be intact (2020.1 generated design.bin can be
       loaded from 2020.2 visualizer).
   _______________________________________________________________________

   Document Revision History in 2020.2
     * Revision - Changes - Status/Date
          + 5.3 - Modifications to improve the readability and
            comprehension of the content. Approved by Tim Peeke. All
            technical enhancements, changes, and fixes are listed in this
            document for all products in this release. Approved by Bryan
            Ramirez. - Released/April 2020
          + 5.2 - Modifications to improve the readability and
            comprehension of the content. Approved by Tim Peeke. All
            technical enhancements, changes, and fixes are listed in this
            document for all products in this release. Approved by Bryan
            Ramirez. - Released/March 2020
          + 5.1 - Modifications to improve the readability and
            comprehension of the content. Approved by Tim Peeke. All
            technical enhancements, changes, and fixes are listed in this
            document for all products in this release. Approved by Bryan
            Ramirez. - Released/February 2020
     * Author: In-house procedures and working practices require multiple
       authors for documents. All associated authors for each topic within
       this document are tracked within the document source.
     * Revision History: Released documents maintain a revision history of
       up to four revisions. For earlier revision history, refer to
       earlier releases of documentation which are available on Support
       Center (http://support.mentor.com).



#Mentor Graphics Search Data
#meta="doc.type.documentation.rn,product.version.2020.2,product.id.P11633"

