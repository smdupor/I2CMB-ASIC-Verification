                      Release Notes For Questa Sim 10.5

                                 Feb 12 2016
               Copyright 1991-2016 Mentor Graphics Corporation
                            All rights reserved.
      This document contains information that is proprietary to Mentor
                                  Graphics
   Corporation. The original recipient of this document may duplicate this
      document in whole or in part for internal business purposes only,
                                  provided
   that this entire notice appears in all copies. In duplicating any part
                                     of
    this document the recipient agrees to make every reasonable effort to
      prevent the unauthorized use and distribution of the proprietary
                                information.
     TRADEMARKS: The trademarks, logos and service marks ("Marks") used
                                   herein
   are the property of Mentor Graphics Corporation or other third parties.
      No one is permitted to use these Marks without the prior written
                                   consent
   of Mentor Graphics or the respective third-party owner. The use herein
   of a third-party Mark is not an attempt to indicate Mentor Graphics as
                                      a
     source of a product, but is intended to indicate a product from, or
   associated with, a particular third party. The following are trademarks
                                     of
    of Mentor Graphics Corporation: Questa, ModelSim, JobSpy, and Signal
                                    Spy.
        A current list of Mentor Graphics trademarks may be viewed at
               www.mentor.com/terms_conditions/trademarks.cfm.
      End-User License Agreement: You can print a copy of the End-User
                                   License
        Agreement from: www.mentor.com/terms_conditions/enduser.cfm.
   _______________________________________________________________________

     * How to Get Support
       For information on how to obtain technical support, visit the
       support page at
       [1]http://supportnet.mentor.com
   _______________________________________________________________________

  Index to Release Notes

     * [2]Key Information
     * [3]Release Announcements in 10.5
     * [4]Base Product Specifications in 10.5
     * [5]Compatibility Issues with Release 10.5
     * [6]General Defects Repaired in 10.5
     * [7]User Interface Defects Repaired in 10.5
     * [8]SystemVerilog Defects Repaired in 10.5
     * [9]VHDL Defects Repaired in 10.5
     * [10]SystemC Defects Repaired in 10.5
     * [11]SVA/PSL Defects Repaired in 10.5
     * [12]Mixed Language Defects Repaired in 10.5
     * [13]Verification Management Defects Repaired in 10.5
     * [14]Power Aware Defects Repaired in 10.5
     * [15]WLF and VCD logging Defects Repaired in 10.5
     * [16]General Enhancements in 10.5
     * [17]User Interface Enhancements in 10.5
     * [18]SystemVerilog Enhancements in 10.5
     * [19]VHDL Enhancements in 10.5
     * [20]SystemC Enhancements in 10.5
     * [21]SVA/PSL Enhancements in 10.5
     * [22]Mixed Language Enhancements in 10.5
     * [23]Coverage Enhancements in 10.5
     * [24]Verification Management Enhancements in 10.5
     * [25]Power Aware Enhancements in 10.5
   _______________________________________________________________________

   Key Information
     * [nodvtid] - (source) A bug related to Windows DLL symbol export is
       fixed in 10.5 and later. A side effect of the fix is that there may
       be incompatibility on Windows platforms regarding existing DPI
       usage. The required setup change is one of the followings:
       1) Use vlog -dpiheader to generate DPI routine prototype
       declarations. Include generated DPI header file in the DPI code.
       OR
       2) If DPI header is not being generated or used, one needs to
       manually attach DPI_DLLESPEC in front of all DPI routines.
       DPI_DLLESPEC is a standard macro defined inside svdpi.h
       The generated DPI header flow is recommended. Failing to do the
       above will incur the following warning at elab time
# ** Warning: (vsim-3770) Failed to find user specified function 'foo' in DPI
C/C++ source files.

       and the fatal error at runtime:
# ** Fatal: (vsim-160) test.sv(11): Null foreign function pointer encountered wh
en calling 'foo'
   _______________________________________________________________________

   Release Announcements in 10.5
     * [nodvtid] - (source) The inFactSv package has changed, so designs
       that use it must be recompiled in Questa 10.5.
     * [nodvtid] - In the next major release (10.6), support for Redhat
       Enterprise Linux (RHEL) 5 and Suse Linux Enterprise Server (SLES)
       10 will be dropped.
     * [nodvtid] -
       Release 10.5 uses FLEXnet v11.13.1.2 server, v11.13.0.2 client.
       For floating licenses, it will be necessary to verify that the
       vendor daemon (i.e., mgcld) and the license server (i.e., lmgrd)
       have FLEXnet versions equal to or greater than 11.13.0.2. If the
       current FLEXnet version of your vendor daemon and lmgrd are less
       than 11.13.0.2 then it will be necessary to stop your license
       server and restart it using the vendor daemon and lmgrd contained
       in this release.
       If you use node locked licenses you don't need to do anything. This
       release will update licensing to MSL v2015_1_patch2 with MGLS
       v9.13_5.4 and PCLS v9.13.5.2
       In summary, this release uses the following license versions:
          + FLEXnet v11.13.1.2 server, v11.13.0.2 client
          + MSL v2015_1_patch2
          + MGLS v9.13_5.4
          + PCLS v9.13.5.2
          + [nodvtid] -
            10.5 release onwards, Questa will be using Microsoft Visual
            Studio 12 a.k.a Visual Studio 13. This would mean that all the
            executables shipped with the 10.5 release and onwards would be
            linked in with "msvcr120.dll". If you have SystemC or
            PLI/VPI/DPI/FLI libraries compiled with older release with any
            gcc compiler shipped with the product, those will have to be
            re-compiled with 10.5. Windows platform compiler details is as
            follows:
               o "gcc-4.2.1-mingw32vc9" has been replaced with
                 "gcc-4.2.1-mingw32vc12" and is shipped with the product.
               o "gcc-4.5.0-mingw64" has been replaced with
                 "gcc-4.5.0-mingw64vc12" and is shipped with the product.
               o "gcc-4.5.0-mingw32vc9" has been replaced with
                 "gcc-4.5.0-mingw32vc12" and will be available for
                 download on a request basis.
                 Compiler versions have not been changed compared to
                 previous release. Please refer to User's Manual for more
                 details.
               o [nodvtid] - (source) In the next major release (10.6)
                    # support for Windows 8.0 will be dropped. No change
                      for Windows 8.1
                    # support for gcc-4.3.3-linux and
                      gcc-4.3.3-linux_x86_64 will be dropped
            ______________________________________________________________

            Base Product Specifications in 10.5
          + [nodvtid] -
            [Supported Platforms]
            Linux RHEL 5 x86/x86-64
            Linux RHEL 6 x86/x86-64
            Linux RHEL 7 x86/x86-64
            Linux SLES 10 x86/x86-64
            Linux SLES 11 x86/x86-64
            Windows 7 x86/x64
            Windows 8 x86/x64
            [Supported GCC Compilers (for SystemC)]
            gcc-4.7.4-linux/gcc-4.7.4-linux_x86_64
            gcc-4.5.0-linux/gcc-4.5.0-linux_x86_64
            gcc-4.3.3-linux/gcc-4.3.3-linux_x86_64
            gcc-4.2.1-mingw32vc12
            [OVL (shipped with product)]
            v2.8.1
            [VHDL OSVVM (shipped with product)]
            v2014.07
            [Licensing]
            FLEXnet v11.13.1.2 server, v11.13.0.2 client
            MSL v2015_1_patch2
            MGLS v9.13_5.4
            PCLS v9.13.5.2
       ___________________________________________________________________

       Compatibility Issues with Release 10.5
       Key Information Compatibility

     * [nodvtid] - (source) A bug related to Windows DLL symbol export is
       fixed in 10.5 and later. A side effect of the fix is that there may
       be incompatibility on Windows platforms regarding existing DPI
       usage. The required setup change is one of the followings:
       1) Use vlog -dpiheader to generate DPI routine prototype
       declarations. Include generated DPI header file in the DPI code.
       OR
       2) If DPI header is not being generated or used, one needs to
       manually attach DPI_DLLESPEC in front of all DPI routines.
       DPI_DLLESPEC is a standard macro defined inside svdpi.h
       The generated DPI header flow is recommended. Failing to do the
       above will incur the following warning at elab time
# ** Warning: (vsim-3770) Failed to find user specified function 'foo' in DPI
C/C++ source files.

       and the fatal error at runtime:
# ** Fatal: (vsim-160) test.sv(11): Null foreign function pointer encountered wh
en calling 'foo'

   SystemVerilog Compatibility
     * dvt6636 - (source) We previously were not type-checking assignment
       patterns used with queues, and allowing a long-obsolete construct
       that wasn't caught until runtime.
     * dvt80536 - (source) It is not permitted to change the protected
       status of an existing design unit by recompiling it, it must be
       deleted from the library and then recompiled.
     * dvt77009 - (source) Vlog wasn't catching errors when comparing
       unpacked arrays and structs. These will now be reported, often as
       suppressible errors.
     * dvt76032 - (source) Reseeding simulation: Added a new VSIM command
       "sv_reseed " which will re-seed every SystemVerilog random number
       generator (thread objects, class objects) based on the specified
       seed (or "random", which will select a random seed). This feature
       can be used after a "vsim -restore" (or at any time) to modify the
       behavior of SystemVerilog random constructs (randomize, randcase,
       randsequence, $urandom, etc) from the point the "sv_reseed" command
       is issued forward. NOTE: There is a small performance impact (both
       speed and memory) on a simulation that has been reseeded.
       Restarting simulation with a new seed: The VSIM command "restart"
       now accepts a "-sv_seed " option, which will restart the simulation
       with the specified seed value (or "random", which will select a
       random seed). Previously, the "set Sv_Seed " command was used
       immediately before a "restart" to instruct Questa to restart
       simulation with a different seed -- this is no longer allowed (the
       "Sv_Seed" variable is now read-only).
     * dvt81854 - (source) Added control options to alter the behavior of
       certain constraints during randomize() to generate significant
       differences in solution distribution. The options are controlled
       via the "vsim -svrandext" command line option:
       -svrandext=[+|-][,[+|-]]* Enable/disable non-LRM compliant
       SystemVerilog constrained-random language extensions Valid
       extensions are: nonrandstab - disable seeding of "non-random" class
       instances promotedist - promote priority of 'dist' constraint if
       LHS has no solve/before nodist - interpret 'dist' constraint as
       'inside' (ACT only) noorder - ignore solve/before ordering
       constraints (ACT only) skew - skew randomize results (ACT only) The
       new options are "nodist" and "noorder". The other options
       (nonrandstab, promotedist, skew) were previously set via the "vsim
       -svext" command line option, and have been moved to "-svrandext"
       (all SystemVerilog constrained-random related options are now
       grouped under "-svrandext"). Note that "nodist", "noorder", and
       "skew" only apply to the ACT solver engine.
     * dvt67978 - (source) Support for randomization of 'real' variables
       and constraints is provided in this release, with the exception of
       multiply and divide with 'real' operands in constraint expressions.
       This feature is an extension of the LRM that can be enabled and
       disabled using the "-svext=realrand" extension at compile and
       simulation time. This extension is enabled by default. Use
       "-svext=-realrand" to disable this extension at compile and
       simulation time. During simulation, any attempt to randomize 'real'
       variables or constraints will require a "svrnm" (SystemVerilog Real
       Number Modeling) licese. If the license check fails, the 'real'
       number support will be disabled.
     * dvt83328 - (source, results) A new svext switch -svext=arif (allow
       ref in fork) was added to support use of refs in fork-join_any or
       fork-join_none blocks inside tasks. Use of refs in fork-join_any
       and fork-join_none blocks is an error by default.
     * [nodvtid] - (source, results) There has been a change in the VPI
       interface to vpiAssertion class objects. The SystemVerilog 2012 LRM
       indicates that vpiAssertion objects may be iterated for from
       vpiInstance class objects only, not from all vpiScopes, however
       assertion objects may in fact be under other scope class parents.
       We have previously added these sub-scope descendant assertions to
       the instance assertion. This change makes the assertion iteration
       valid on all scope objects to bring it into line with similar
       vpiVariable iterations. A consequence is that sub-scope iterations
       are necessary to find all the assertions in an instance.
     * dvt72057 - (results) For large designs with a common clock driving
       more than 2 million udp instances, udp sensitivity to the clock may
       be lost.
     * dvt72134 - (results) Registers feeding into a primitive that drives
       an output of a full timing optimized cell could provide incorrect
       results.
     * dvt71528 - (results) Optimized gate-level cells with path delays
       specified in the HDL with large values, could result in zero delay
       propagation delays.
     * dvt72442 - (results) Fix vopt assertion fatal error.
     * dvt73252 - (results) When the default specify path delay values
       were smaller than the annotated SDF RETAIN delay values,
       vsim-SDF-8745 warning was incorrectly issued.
     * dvt73170 - (results) When a specify path, with a destination port
       driven by a Verilog "reg" variable, was annotated SDF RETAIN delays
       and vsim options +vlog_retain_on, +vlog_retain_same2same_on and
       -voptargs="+acc" were specified, vsim crashed.
     * dvt73542 - (results) Gate-level optimized cells with cascading
       sequential udps may under some conditions not evaluate correctly.
     * dvt74257 - (results) Using the associative array method 'exists'
       with a wildcard array inside a parameterized class, or through an
       external reference, could result in an incorrect 'false' result.
     * dvt71774 - (results) A simulation invoked with an elab or a
       checkpoint file from 3-step flow (with SDF file specified to vopt),
       would not reload SDF on "restart -f".
     * dvt74219 - (results) Calling a builtin queue or associative array
       method on an out-of-bounds array element could result in a
       non-useful error. We now print a warning, and ignore the operation.
     * [nodvtid] - (results) Command line force did not support string
       types. This is now fixed.
     * dvt77400 - (results) In some cases a bogus vsim-3391 'Requested
       memory exceeds physical memory' message can be generated when
       relatively little virtual memory is actually being used but very
       large objects are being allocated and freed while processing
       dynamic arrays and similar objects. In 10.3d and 10.3e it will
       generate a Failure messages that stops the simulation. It can be
       resumed with a second run command, or the 'suppress 3391' vsim
       switch can eliminate it. In 10.4 it is will not stop the
       simulation. It can be suppressed the same way. If the operating
       system shows that the process is indeed larger then physical
       memory, then the message is not bogus, and suggests that poor
       performance will result due to heavy paging. After the fix the
       transcript file will no longer contain the bogus message.
     * dvt62347 - (results) vlog-2292 error incorrectly printed "OVM"
       related message regardless of whether OVM or UVM loading failed.
       This has been corrected to reflect the right context.
     * dvt76928 - (results) This was a bug in the context of a function
       inside a class. If the function has a default value for an argument
       and the argument has exactly the same name as the default value ,
       then this was leading to incorrect results. This has been
       corrected. A sample example of the bug scenario :
package p1;
        int num = 1;
        class C;
        function int get_int(int num = num );
            return 1;
        endfunction : get_int
        endclass
endpackage : p1

module top;
    import p1::*;
                C c = new;
                initial begin
                c.get_int();
                end
endmodule : top

     * dvt77231 - (results) Fixed a bug in usage of tagged unions inside a
       case statement inside a task.
     * dvt77144 - (results) Questa was incorrectly allowing some wrong
       syntax involving the keywords 'this' or 'super' along with
       class-specialisations to parse in vlog. This was resulting in
       errors later in vsim. Have fixed this behaviour. Here is a sample
       scenario.
package pkg;
   class c1#();
       virtual task run();
       endtask
   endclass
   class c2 extends c1;
   endclass;

   class c3 ;
      virtual task run();
      endtask
      task t();
        this.c1#()::run();// this gives a syntax error now
      endtask
   endclass
endpackage

     * dvt68429 - (results) Added the support for alias of a wreal net.
     * dvt77905 - (results) vopt didn't properly handle wildcard ports
       (".*") in bind instances when -pduspec or -tbxhierrefs was
       specified.
     * dvt16002 - (results) Indexing into a parameterized wire register or
       array could result in an error, or incorrect results.
     * dvt78472 - (results) Fixed a bug related to class specializations
       created in extern functions of a class. Before the fix , this bug
       was leading to creation of multiple specializations of a class for
       equivalent set of parameters.
     * dvt79480 - (results) Fixed a bug which results in reversed bit
       connections, when a concat expression is passed to an unpacked port
     * dvt78775 - (results) Under certain circumstances, use of "++" or
       "--" as an index into an array would result in the variable being
       incremented or decremented 2-3 times, instead of just once.
     * [nodvtid] - (results) Corrected resizing and padding of data field
       width when width is provided with format specifier for data
       display. Leading zeros are suppressed and replaced by spaces when
       displaying decimal values. In other radices, leading zeros are
       always displayed. Old display behavior is preserved under sv
       extension 'lfmt' in vsim.
     * [nodvtid] - (results) Modified identifier name length limit in
       parsing message from 20 to 50 to avoid name truncation.
     * [nodvtid] - (results) Fixed the data read by fread in bit select or
       part select of integers from a file.
     * [nodvtid] - (results) A ref argument in the new operator of
       covergroup will be treated the same as a read-only const ref
       argument. Added svext 'ncref' in vlog for old behavior i.e. ref
       argument will not be treated as constant unless specified.
     * dvt79543 - (results) Fixed an issue that would cause randomize() to
       return 0 for some non-contradictory scenarios involving a single
       4-state random variable and a single 'dist' constraint.
     * dvt79679 - (results) In some rare cases, randomize() would generate
       differing results for a fully optimized simulation vs. a simulation
       where +acc is enabled. This issue has been fixed.
     * dvt73180 - (results) In some rare cases, randomize() will produce
       spurious results for random variables involved in a !inside
       (not-inside) constraint if the LHS and RHS contain random
       variables. This issue has been fixed.
     * dvt80351 - (results) An input port which is not declared as 'wire'
       or 'var' should default to 'wire'. Previously, we were treating an
       input port of 'enum' type as a 'var'.
     * dvt80596 - (results) In some rare cases, randomize() would trigger
       an internal error in slvACTContext. This issue has been fixed.
     * dvt78381 - (results) Added "ddup - Drive default unconnected port"
       in sv extension. Previously(Before 10.5) explicit named unconnected
       ports were driven by default value of port, now it will be 'z' or
       'x'depending on port being used is wire or reg. User can get the
       old behavior by using -svext=ddup. 10.5 on wards the behavior is as
       per "LRM 1800-2012 (23.3.2.2 Connecting module instance ports by
       name) : If an input port with a specified default value has an
       explicit empty named port connection [i.e.,.port_name()], then the
       port shall be left unconnected and the default value shall not be
       used."
     * dvt81155 - (results) In some situations a release on a register
       which had a force in effect fails to trigger a continuous
       assignment to that register.
     * dvt81118 - (results) The 'index()' method, when used inside a
       nested array manipulation method, would return the wrong value.
     * dvt77481 - (results) Fixed cascaded sequential UDP issue. New
       behavior is more aggressive in finding cascaded SUDP and handling
       them.
     * dvt82072 - (results) When multiple PLI/VPI applications are
       involved in the simulation, different applications may register the
       same kind of callbacks, i.e. end of compile callback. The ordering
       of callbacks between PLI and VPI may become nondeterministic and
       can be affected by the addition/removal of some other irrelevant
       PLI/VPI application. A fix is put in to remove this aspect of
       nondeterminism. To revert back to the old behavior, one can use the
       new vsim switch -vpicompatcb introduced in 10.5.
     * dvt78096 - (results) Fixed a crash which was happening in vsim
       during restart. This was related to issues in package loading
     * dvt80469 - (results) Fixed a bug in handling of an assign statement
       inside a for-loop in verilog. Was already working in SV flow.
     * dvt82348 - (results) Fixed the parsing errors related to empty
       clocking event field in $past and similar calls. LRM allows giving
       empty arguments to these calls.
     * dvt82422 - (results) Fixed an assert failure when there is a
       part-select on an element of a packed struct in the RHS of an
       assign statement.
     * dvt82551 - (results) Fixed an assert failure in vopt where
       out-of-bounds index of a vector is being used in a concatenation.
     * dvt75654 - (results) SDF back-annotation now works with anonymous
       Non-ansi type source and destination ports.
     * dvt83309 - (results) Under an 'always @(*)', an external reference
       with a non-constant index was not properly being added to the
       sensitivity list. An example woule be 'my_if.data.info[i].id',
       where 'i' is a variable. Now, 'my_if.data.info' will trigger the
       always block.
     * dvt73179 - (results) Fix an improper vopt optimization when DPI
       import call is involved in an always block.
     * dvt84015 - (results) The non-standard feature of System Verilog
       "force" and "release" statements that target a select of a variable
       (as opposed to a net) do not fully support a non-constant rhs. A
       warning is issued to this effect, and the resulting behavior may
       not match the expected behavior for force and release semantics
       involving a non-constant rhs. The behavior has been changed in this
       release such that the rhs is evaluated just once at the time the
       force is executed and is applied as though it is constant and does
       not update forced value subsequently when any of the rhs variables
       change value. Previously, the forced value would be updated when
       the rhs variables change value, but any subsequent force or release
       on the same target would not cancel the force. This old behavior
       can be selected by specifying the vsim -reevalvarbitforces option.
     * dvt70976 - (results) SystemVerilog strings are now reported
       separately from dynamic arrays in the capacity report.
     * dvt68123 - (results) Improved handling of randomize() timeouts.
       Specify solver timeout threshold (in seconds) using any of the
       following methods: - vsim command line option: "-solvetimeout " -
       modelsim.ini [vsim] variable: "SolveTimeout=" - Verilog attribute:
       "solvetimeout=" A randomize() call will fail if the CPU time
       required to evaluate any randset exceeds the specified timeout. The
       default value is 500. A value of 0 will disable timeout failures.
     * dvt76126 - (results) vlog error 13028 has been made suppressible.
       LRM requires the keyword 'inside' to be followed by a left brace.
       This error was already allowed to be ignored by -permissive
     * dvt78126 - (results) An LRM extension has been added to allow the
       use of array reduction methods on multi-dimensional unpacked
       arrays, without the need of using a 'with' clause. To use this,
       specify "-svext=ared" (for array reduction) on the vlog
       command-line. In that case, a multi-dimensional unpacked array will
       be treated as if it had a single dimension
       [0:total_number_of_elements-1].
     * dvt71352 - (results) Support of pulse Error/Reject behavior on
       INTERCONNECT delays on optimized cell inputs. Earlier error 12031
       was reported for such cases.
     * dvt82483 - (results) Added a new SystemVerilog Constraint Solver
       extension, -svrandext=[+|-]forkjoinstab. By default this extension
       is disabled. When this extension is enabled, the random stability
       of parent thread is preserved when creating the fork/join
       sub-threads.
     * dvt82697 - (results) Within the context of a constraint, allow a
       random index expression for any packed variable (previously, this
       was only allowed on scalar packed variables). This non-LRM
       compliant extension is enabled by default, and can be disabled with
       "vsim -svrandext=-randpackidx" or with "vsim -pedanticerrors".
     * dvt82547 - (results) SystemVerilog Constraint Solver extension
       nonrandstab and forkjoinstab are enabled by default to improve the
       random stabilities. The simulation results from previous major
       releases may be changed as a result of the new stimulus generation.
       To revert back to the pre-10.5 simulation result, one can apply
       vsim switch -svrandext="-nonrandstab,-forkjoinstab".
     * dvt78261 - (results) Changed the way vsim interprets invalid
       Sv_Seed values (passed in via the vsim "-sv_seed" command line
       option or the "Sv_Seed" modelsim.ini variable). In the past, when
       vsim encountered an invalid Sv_Seed value, an non-suppressible
       error message (vsim-7031) would be displayed and Sv_Seed would be
       set to 0. The new behavior allows the error to be
       downgraded/suppressed, and the value of Sv_Seed will reflect the
       32-bit truncated value of the invalid seed (the interpreted value
       of Sv_Seed will be displayed by the vsim-7031 error message).
     * dvt82275 - (results) The "vsim -sv_reseed" command line option and
       the VSIM "sv_reseed" command are now UVM aware by default (requires
       questa_uvm_pkg 1.2.3) -- when a UVM simulation is re-seeded, the
       random sequences generated by UVM will change as a result. This
       behavior can be disabled with "vsim -uvmcontrol=-reseed".
     * dvt35166 - (results) SV real data type now supported for
       covergroups.
     * dvt72319 - (results) Added the ability to collect timing check
       coverage information for a module instance compiled +acc. The
       tcheck_set and tcheck_status can now be used to report pass/fail
       counts for each timing check.

   VHDL Compatibility
     * dvt73471 - (source) Symbols defined only in the body of an
       uninstantiated package were accessible to other design units either
       through a USE clause or explicit scope identification. Customer
       designs that previously took advantage of this error, referencing
       symbols defined only in package bodies, need to be changed to
       either remove the offending references, or move the declarations of
       the symbols to their uninstantiated package headers.
     * dvt75261 - (source) If a locally static range of the first form
       (A'RANGE or A'REVERSE_RANGE) was used as the index range in an
       array subtype indication, there was no check that the range bounds
       were compatible with the index subtype of the base array type. This
       has been fixed.
     * dvt77769 - (results) A type conversion from a floating point type
       to an integer type will now produce an Error message if the
       floating point value is outside the range of a signed 32-bit
       integer. Also, a type TIME expression involving a floating point
       expression will produce an Error message if the result is outside
       the range of a 64-bit signed integer; in this case, the lower bound
       is -9223372036854775807, which is the smallest position number
       allowed for type TIME. Finally, a type conversion will check that
       the result belongs to the subtype denoted by the type mark of the
       target type.

   Mixed Language Compatibility
     * dvt72760 - (results) In a mixed language design with a verilog
       switch network the extended VCD output for a VHDL signal was not
       calculated properly.

   Coverage Compatibility
     * [nodvtid] - (source) vcover parallelmerge has following changes:
- Added new options: -32, -64, -log
- Added support for UGE & RTDA grid type
- Changed behavior of -outname option. parallelmerge will now create output file
 with exact given name. It will no longer append '.ucdb' in UCDB mode
- Added support to specify multiple directory paths to -genlistfrom in UCDB mode

     * dvt68442 - (results) SV covergroup coverage was different in merged
       file depending on the merge order of input UCDB files due to
       excluded auto cross bins.
     * dvt74268 - (results) Covered auto cross bin was not getting into
       the merged UCDB if that bin is uncovered in the master UCDB.
     * dvt69525 - (results) Some toggle nodes of a VHDL record were
       missing in viewcov mode
     * dvt71906 - (results) The vcover merge now reports error 6854 by
       default for conflicting test names
     * dvt79569 - (results) FEC expression and condition coverage numbers
       were different in byfile coverage report and GUI Files tab.
     * dvt74258 - (results) The -uvmtestname and -ovmtestname options are
       added in vsim to use +UVM_TESTNAME and +OVM_TESTNAME names in
       coverstore testnames and data file names. Specified SV seed values
       are also added in coverstore test names and data file names by
       default.
     * dvt75139 - (results) Covered bins, missing bins, total bins, and "%
       Hit" are added in covergroup text report for covergroup TYPEs and
       covergroup instances. Those are also added for TYPE coverpoints and
       crosses in covergroups having merge_instances=0. The "% Hit" number
       is also added for all coverpoints and crosses.
     * dvt75218 - (results) Functional coverage items are now reported for
       each instance and DU in byinstance and bydu text reports
     * dvt76485 - (results) In coverage html reports, exclusion comments
       added by the users is added as a tooltip in the hit count cells.
       Also, a plus sign '+' is added in the cell to indicate that this
       cell has an exclusion comment.
     * dvt79285 - (results) In the coverage summary page in html coverage
       report, a new hyperlink named "List of Design Units included in
       report..." is added. When clicked,it will redirect the user to a
       new html page that has a table containing all the design units and
       the coverage percentages for all the available coverage types in
       the design. This table can be sorted by either the total coverage
       or any of the coverage types.
     * [nodvtid] - (results) Following enhancements were added to vcover
       parallelmerge:
- Show correct memory with -stats=perf and total number of error/warning counts.
- Show runtime and memory consumed by each parallel merge process
- Show merge errors and warnings by default
- Deprecated -verbose=all mode
- Added -quiet and -verbose mode
- Show parallelmerge command in vcover -help
- Added extra check if merge process gets killed by grid
- Added version number in internally generated RMDB file. If user had copied RMD
B file and modified to support their grid, they will need to update their RMDB f
ile for these new enhancements.

     * [nodvtid] - (results) There have been changes to messaging and
       logging in the vcover utility and UCDB/UCIS libraries. Changes may
       also be seen in vsim. These changes are designed to align the
       vcover messaging with other Questa tools. The filename 'vcover.log'
       is no longer the default output -log filename for the vcover
       operations that take a -log option (merge and ranktest). New
       behavior in this case is that output defaults to stdout, and is
       echoed to any explicitly supplied log file. Many output messages
       have been added to the catalog and output text may change as a
       result. This is an ongoing project and further changes should be
       anticipated in this area.
     * dvt28804 - (results) The -checkinputs switch is added in vcover
       merge to skip and report corrupted UCDB input files.

   Power Aware Compatibility
     * dvt80233 - (source, results) A new VOPT checks-controllability
       option is added that shall enable/disable specified dynamic PA
       check based on the control-signal-expression value. Option:
       [-chksctrl_expr {ctrl-signal-expression}] Sample tcl commands to
       achieve ctrl-signal-expression based controllability: pa_checks
       -checkIds { rpo rop} -chksctrl_expr {/tb/retpwr && /tb/rtc} This
       option is applicable for 'rpo' and 'rop' checks currently.
     * [nodvtid] - (results) Fixed an issue of wrong simulation result due
       to retention being applied on a signal in bitwise manner.
     * [nodvtid] - (results) There was some noise in -pa_checks=t
       (QPA_PD_OFF_ACT) during power domain transitioning. This issue has
       been fixed now.
     * dvt79862 - (results) Fixed an issue in master-slave(also known as
       slave-alive) retention configuration. Now when the retention
       condition is active then the effect of clock, set or reset is
       ignored and the retained value is present at the register output.
     * [nodvtid] - (results) option -pa_enable=libretcell behaviour is
       made default TRUE. for retentions cells tool used to do driver
       based corruption and now it be do liberty based corruption.
     * dvt80052 - (results) Added static check for "redundant", "missing"
       and "valid" retention cell.
     * dvt80521 - (results) Isolation/Level-shifter strategies with
       location parent are now ignored for open output ports.
     * dvt82076 - (results) There is change in behavior in
       CORRUPT_ON_ACTIVITY/CORRUPT_STATE_ON_ACTIVITY simstates for flops.
       Now, the flop outputs would not corrupt if there is a change in
       input('D') in COA/CSOA simstate. Use the vopt option
       -pa_enable=coainputcrpt to achieve flop corruption with change in
       'D'.
     * [nodvtid] - (results) There is a change in behavior of vopt option
       "-pa_upfsyntaxchecks". Earlier using this option with vopt would
       only do syntax checking of the UPF and exit.Now using this option
       with design top would do syntax checking of the UPF file and if
       successful will invoke actual PA UPF elaboration. If user doesn't
       specify any design top with this option then tool will only do
       syntax checking of UPF and exit(same as old behavior).
     * dvt83155 - (results) Added support for liberty based corruption for
       all liberty cells under pa option 'libertycellcrpt'
       (-pa_enable=libertycellcrpt)

   General Compatibility
     * [nodvtid] - (source) There is a change in the meaning of "recursion
       level" specified to various vopt options like
       +acc/+noacc/+cover/+nocover/+initreg/+initmem. Before, this level
       meant how many levels under the current level, the option is to be
       applied. So, level 0 meant no recursion. Now, 0 recursion level
       means full recursion. And this option means how many levels
       including the current level, the option is to be applied.
       The following change in the recursion level keeps the options
       behaving the same way as before.
       previous: +acc=r+/top/r now: +acc=r+/top/r (no change)
       previous: +acc+/top. now: +acc+/top. (no change)
       previous: +acc+top+128 now: +acc+top+0 (full recursion)
       previous: +initreg+0+/top/du+0 now: +initreg+0+/top/du+1 (level ->
       level + 1)
       previous: +cover+lib1.du+2 now: +cover+lib1.du+3 (level -> level +
       1)
     * [nodvtid] - (source) Some of the +acc options are replaced with
       some other options. As of now, the old options are deprecated, but
       will continue to work to maintain backward compatibility.
       The following +acc options are not changed: +acc=mnprtv
       These +acc options map to the following new options:
       +acc=a -> -assertdebug +noacc=a -> -noassertdebug
       +acc=b -> -bitscalars +noacc=b -> -nobitscalars
       +acc=c -> -cellaccess +noacc=c -> -nocellaccess
       +acc=f -> -fsmdebug +noacc=f -> -nofsmdebug
       +floatparameters -> -floatparameters
       +acc=l -> -linedebug +noacc=l -> -nolinedebug
       +nosparse -> -nosparse
       +acc=u -> -primitiveaccess +noacc=u -> -noprimitiveaccess
       +acc=x -> -randmetastable +noacc=x -> -norandmetastable
       +acc=s -> -systfoverride +noacc=s -> -nosystfoverride
     * [nodvtid] - (results) A crash has been fixed when +nowarn option is
       used with no arguments in vsim. For eg. "vsim +nowarn top_module"
       will result in error now.
     * [nodvtid] - (results) Error ID 2411 and 2412 have been assigned to
       permissive error messages 'Enum. range value must be a non-negative
       integer' and 'Enum. range must be a positive integer' respectively.
       These messages can be suppressed with '-suppress' now. Verror help
       has been added to these IDs too.
     * [nodvtid] - (results) There are multiple VPI changes to the class
       model to align it more closely to the LRM, and to make it more
       useable. Class object names are now aligned to the GUI names. More
       vpi_handle and vpi_iterate queries have been implemented, affecting
       among other things vpiClassTypespec, vpiClassObj, and vpiClassDefn
       objects. Queries for file and line information on class objects
       will return an error, as these objects are not anchored by
       definition to the source code.

   Verification Management Compatibility
     * [nodvtid] - (source) In VRM, the "testname" parameter is recognized
       for group Runnables. That means a mergeScript or triageScript
       Action now inherits the testname under which it runs and the
       preScript and postScript of a group Runnable which defines a
       non-blank "testname" parameter are considered part of the same
       test. The "testname" parameter should only be defined in task
       Runnables if the intention is to flag only the leaf-level
       execScript Actions as tests.
     * dvt74716 - (results)
The assert scope requires some special case processing to compute "total coverag
e" for an assertion:
    If an assertion has both pass and fail counts
        It is 100% if pass count > 0 and fail count == 0
    else if it has only fail count:
        It is 100% if fail count == 0

The UCDB_ASSERT_SUCCESS_INST element of the summary record represents this perce
ntage.

The ranktest tool will use and report the 'UCDB_ASSERT_SUCCESS_INST' metric (whe
n possible). If there is any assertion failure in any test, it is a bug/problem
that must be addressed by the user.

Until ranktest detects a test that has an assertion failure:
 1. Ranktest will use the "%success metric" like the rest of our reporting tools
.
 2. The ranktest "total coverage" number will agree with the "total coverage" nu
mber our reporting tools.
 3. The "%success" metric will be reported in the "Assertions" column.

After ranktest detects a test that has an assertion failure:
 1. Ranktest will ignore the "%success" metric in its calculations.
 2. The ranktest "total coverage" number will NOT agree with the "total coverage
" number our reporting tools.
 3. A "-" will be reported in the "Assertions" column.
 4. A warning message similar to the following will be issued:

** Warning: (vcover-17208) One or more tests contain "assertion failures".
Ranktest will not include "assertion successes" in its ranking metric
calculations (i.e. "assertion successes" will be weighted as 0).

As a consequence, the ranking total coverage metric may be different from the to
tal coverage numbers of other Questa GUI and CLI tools. The reason for this alte
ration is that the "%success" metric is now exhibiting a NON-monotonically incre
asing behavior and can no longer be used in the ranktest "greedy" algorithm. Ran
ktest will NOT use the "assertion pass" metric in any way (neither with nor with
out assertion failures).
     * dvt75521 - (results) Fixed a defect that caused statement coverage
       to be skipped when statement coverage was explicitly selected along
       with other coverage types. This effect many of the "coverage ..."
       command supporting the "-code ..." argument. EXAMPLE ARGUMENT:
       "-code st".
     * dvt72260 - (results) The Test Analysis menu in Structure window was
       generating paths using "::" as a separator which are not valid in
       viewcov mode.
     * dvt81937 - (results) xml2ucdb fails to replace parameters with
       their values in links of xml type. This is now fixed.
     * dvt76258 - (results) The ranktest summary has been augmented to
       include the number of contributing and non-contributing tests.
     * dvt77656 - (results) Formal items linked with testplans by rules
       are now displayed in Tracker window like regular objects using
       their own icon.
     * dvt78842 - (results) The tplanref and tplansection attribute names
       are now supported for tests to link with specified testplan
       sections. The tplanref attribute is for specifying target testplan
       section's reference number, and the tplansection attribute is for
       specifying the full hierarchical path of the target testplan
       section.
     * dvt78894 - (results) The tplansection is now supported as an
       attribute name in HDL source code for specifying testplan scope
       hierarchy paths to link with. It also works when used within
       option.comment and type_option.comment of covergroups, coverpoints,
       and crosses.
     * dvt75719 - (results) The AND, OR, and NOT operators are now
       supported in testplan rule expressions for constructing complex
       rules. The FORMAL_BOUNDED_PROOF rule alias is now added to link
       with testplans. It requires proof radius to be specified along with
       the formal object name.
     * dvt79943 - (results) Setting mintimeout to 0 in VRM, will disable
       timeout monitoring for the corresponding action. The mintimeout
       value of 0 will take precedence over other global and local timeout
       values.
     * dvt65329 - (results) In Excel/OO Add-In settings dialog, a new
       check box named 'Allow Add-In to Auto-Color testplans' is added.
       When checked, the Add-In toolbar buttons will color the testplan
       cells in the default alternating-column schema. Note that this
       option is checked by default.
     * dvt75566 - (results) Ranktest now provides a way to selectively
       group tests based on attribute values, such that ranktest will
       treat them as one combined object.
Four new switches are:
    -groupby [=< value >]  --  Specifies which attribute within the UCDB test re
cord to group tests by.
    -groupfilter < regex >  --  Specifies a regular expression match to apply to
 the attribute value being grouped, to match on a specific part of the attribute
 value itself.
    -norun -- Display groups without ranking. Allows you to visualize grouping.
    -recursive  -- Enables recursive ranking, items which make up a group, will
in turn be ranked against one another.

   NOTE: The output from ranktest has been altered from that of past releases (w
hen grouping as well as when not grouping).
   NOTE: The switches -concise and -verbose have been removed.

     * dvt80352 - (results) "vcover report ... < rankfile >" is a new
       feature."vcover report" never accepted rank files in the past. The
       four "show" options below are only valid when "vcover report ..."
       is given a rankfile.

        New arguments:
            -showucdb
            -showattr < attr[,< attr >]+
            -showincr
            -showbincounts

The following pre-existing options have a new/different behavior when
"vcover report ..." is given a rankfile:
      -precision < int >
      -assert
      -code [bcesf(t|x)]
      -codeAll
      -cvg
      -directive
The global arguments are supported:
      -suppress ...
      -error ...
      -note ...
      -warning ...
      -stats ...

Only the arguments listed above work with rankfile reporting.
None of the four rankfile reporting "show" arguments work with
generic coverage reporting.

     * dvt75565 - (results) Functional coverage consolidated views are now
       added into the HTML report. To get these new pages, you have to
       click the hyperlink on Covergroups/Directives/Assertions in the
       Coverage by type table in the coverage summary page. Note that if
       the details of any of these types is filtered out using the
       -details option, its consolidated view page won't be generated.

   User Interface Compatibility
     * [nodvtid] - (results) A new feature called VHDL Access Path
       Expressions has been introduced which provides improved visibility
       and a more intuitive way of viewing VHDL access variables and
       objects in the Wave Window. Some of the features of vhdl access
       path expressions are:
          + More descriptive pointer values. Values are Dynamic Object
            Identifiers instead of hexadecimal memory address.
          + Access references may be expanded in place in the wave window
            rather than having to inspect individual access objects one by
            one.
          + Ability to add access_var.all to see dereferenced object
            values.
          + Ability to "cast" unconstrained arrays to constrained array
            type.
          + The [accessinfo] command gives metrix and reports about access
            object usage.
          + Enabled with -accessobjdebug switch or AccessObjDebug
            modelsim.ini variable setting.
     * dvt78258 - (results) Scripting of the simulator now supports nested
       "vsim -do" operations. The do-file specified in a vsim command that
       contains another vsim command with it's own do-file option will now
       execute the nested do-file. Previously, the -do option in a nested
       vsim command was ignored, with a warning. Existing scripts that
       have "vsim -do" commands will see different behavior.
     * [nodvtid] - (results) Vsim has always wrapped long output lines in
       the transcript file. Lines longer than 3000 characters are wrapped
       onto subsequent lines. There are now two new control settings that
       effect this wrapping behavior. The settings can be modified by
       changing variables in the modelsim.ini file, or by using two new
       "transcript" commands in a do file.
       WrapMode: The WrapMode variable controls wrapping of output lines
       in the transcript file. A mode of 0 will turn off wrapping, mode 1
       enables wrapping, and mode 2 enables wrapping and adds a
       continuation character, '\', at the end of each wrapped line except
       the last one. The default value for WrapMode is 0. (Note: this is a
       change from the behavior in 10.4).
       WrapColumn: The WrapColumn variable defines the column width where
       the line gets wrapped. This column is somewhat soft; the wrap will
       occur at the first white-space character after reaching the
       WrapWSColumn column or at exactly the column width if no
       white-space is found. The default value for WrapColumn is 30000.
       WrapWSColumn: The wrap will occur at the first white-space
       character after reaching the WrapWSColumn. If there is no
       white-space, the wrap will occur at the WrapColumn. The default
       value for WrapWSColumn is 27000.
       The command form of these variables are "transcript wrapmode ?n?",
       "transcript wrapcolumn ?n?", and "transcript wrapwscolumn ?n?",
       respectively.

   Release Announcements Compatibility
     * [nodvtid] - (source) The inFactSv package has changed, so designs
       that use it must be recompiled in Questa 10.5.
     * [nodvtid] - (source) In the next major release (10.6)
          + support for Windows 8.0 will be dropped. No change for Windows
            8.1
          + support for gcc-4.3.3-linux and gcc-4.3.3-linux_x86_64 will be
            dropped
   _______________________________________________________________________

   General Defects Repaired in 10.5
     * [nodvtid] - (results) A crash has been fixed when +nowarn option is
       used with no arguments in vsim. For eg. "vsim +nowarn top_module"
       will result in error now.
     * dvt81665 - The vsim -visualizer option can now be put inside a -f
       option-file.
   _______________________________________________________________________

   User Interface Defects Repaired in 10.5
     * dvt74126 - In Questa, the "change" command could crash or
       incorrectly ignore ".super" psuedo scope. This has been corrected.
     * [nodvtid] - The "Filter Waveform..." dialog has been improved. The
       old dialog caused confusion and unintended usage errors.
     * [nodvtid] - In case opposite options like +acc and +noacc were
       applied to the same design region, there was priority associated
       with these options. The higher priority option used to over-ride
       the lower priority option. Now, these options are applied
       left-to-right. Any vlog/vcom options can be over-ridden by vopt.
     * dvt63380 - The find subcommands "insource" and "infiles" now work
       in -batch mode.
     * dvt18485 - The Search bar in each window is now persistent. This
       means if a Search bar is open within a window when the application
       is closed, the next time the application is launched and the window
       opened, the Search bar will be visible as well.
     * dvt19881 - Using the Find feature in the Preference Dialog box will
       now search the entire contents, no longer requiring the that the
       tree be expanded first.
     * dvt83573 - The Wave window view will jump to the end time when
       selecting items in the Structure window. This issue as been fixed.
       To work around the problem in existing releases, set
       PrefWave(ScrollOnRunComplete) 0, however, with this option
       disabled, the Wave window will not scroll to the end after a run
       either.
     * dvt74842 - When saving a window image on Windows, the error
       "expected integer but got "-x"" is reported. This problem has been
       fixed.
   _______________________________________________________________________

   SystemVerilog Defects Repaired in 10.5
     * dvt72057 - (results) For large designs with a common clock driving
       more than 2 million udp instances, udp sensitivity to the clock may
       be lost.
     * dvt71763 - Fixed a bug when interface with real parameters are
       passed into uvm_config_db set/get function or into any other
       parameterized class.
     * dvt30633 - Allowed packed union as bit stream data type.
     * dvt72134 - (results) Registers feeding into a primitive that drives
       an output of a full timing optimized cell could provide incorrect
       results.
     * dvt71528 - (results) Optimized gate-level cells with path delays
       specified in the HDL with large values, could result in zero delay
       propagation delays.
     * dvt72442 - (results) Fix vopt assertion fatal error.
     * dvt62351 - Fixed issues which resulted in vlog/vopt crash when
       structure field-select hierarchical references and nets were used
       as streaming concat element on LHS of assignments. Added support
       for structure filed-select hierarchical references and added error
       checks for nets as streaming concat elements on LHS of assignments.
     * dvt72102 - Error vsim-3043 is now a non-suppressible error. Created
       a new error suppressible 12036 for the Bind to a non-existent
       module.
     * dvt72524 - Fixed a bug where parameter inside super class was not
       found while resolving hierref in bind statement.
     * dvt73252 - (results) When the default specify path delay values
       were smaller than the annotated SDF RETAIN delay values,
       vsim-SDF-8745 warning was incorrectly issued.
     * dvt73170 - (results) When a specify path, with a destination port
       driven by a Verilog "reg" variable, was annotated SDF RETAIN delays
       and vsim options +vlog_retain_on, +vlog_retain_same2same_on and
       -voptargs="+acc" were specified, vsim crashed.
     * dvt72458 - Fixed a bug where usage of %% in the message string in
       severity system tasks was resulting in some random data in the
       message.
     * dvt72342 - Fixed a bug where usage of a parameter of data type in
       severity system tasks was causing compiler to give internal error.
     * dvt73542 - (results) Gate-level optimized cells with cascading
       sequential udps may under some conditions not evaluate correctly.
     * dvt73581 - Fixed a bug (internal error) when parameter is used as
       queue index.
     * dvt73209 - Starting in the 10.3b release, vopt would sometimes
       generate the error:
       ** Error: test.sv(2246): Questa has encountered an unexpected
       internal error
     * dvt63470 - Vsim memory size would grow significantly after
       'restart' commands in designs with large SystemVerilog packages.
     * dvt69941 - Vopt would sometimes give incorrect errors like:
       ** Error: test.sv(24): (vopt-2118) The function 'f' is not a valid
       constant function.
       ** Error: test.sv(764): Initializer must be a constant value or
       constant expression.
       when the 'bind' statement was used to instantiate a SystemVerilog
       module into a Verilog target.
     * dvt73431 - Fixed a bug where compiler was crashing in initializing
       a clocking block variable which was an array of struct type.
     * dvt74082 - "const ref" formal argument usage in covergroup sample
       override function was triggering a compiler error. This is now
       allowed.
     * dvt74257 - (results) Using the associative array method 'exists'
       with a wildcard array inside a parameterized class, or through an
       external reference, could result in an incorrect 'false' result.
     * dvt74214 - Fixed a crash in a DPI import call caused by using class
       member fields as the actual arguments of unsized packed open array.
     * dvt72245 - Fixed a vopt internal error when an external decl is
       used in a parameterized class.
     * dvt73554 - In some scenarios we were not giving vsim error when
       using bit select of scalar variable through external declaration.
       For example if we declare logic "abc" in module "top", then
       "top.abc[0]" should result in error. Now a suppressible error is
       issued for these cases.
     * dvt73388 - Fixed a vlog parser bug that prevented the usage of
       overloaded user defined type name as the name of a variable in
       coverpoint expression.
     * dvt71774 - (results) A simulation invoked with an elab or a
       checkpoint file from 3-step flow (with SDF file specified to vopt),
       would not reload SDF on "restart -f".
     * dvt74546 - Added a suppressible error message to inform users that
       binding a checker is not supported in novopt mode.
     * dvt74468 - The implied @* sensitivity should exclude variables
       referenced within a sequential delay.
     * dvt74322 - Fixed a crash when mismatch number of arguments are
       passed in task call.
     * dvt74866 - Fixed a bug when an assign is used on array through
       hier-ref.
     * dvt73310 - Traversing individual words of large SV memories using
       vpi_iterate/vpi_scan functions caused huge memory usage.
     * dvt74219 - (results) Calling a builtin queue or associative array
       method on an out-of-bounds array element could result in a
       non-useful error. We now print a warning, and ignore the operation.
     * [nodvtid] - (results) Command line force did not support string
       types. This is now fixed.
     * dvt75136 - Fixed a bug where sometimes zero delay output of a
       clocking block was not getting assigned to the outside variable if
       it changed after RENBA region.
     * dvt68524 - Fixed a bug where vopt/vlog are crashing due to a
       function call inside unelaborated generate. This was happening in
       few cases when the used function is defined after generate.
     * dvt75574 - Fix a crash in vsim when a literal 0 is passed to the
       port in a module instantiation that is expecting an interface.
     * dvt75146 - Fix a virtual interface related error in vsim when a
       modport is passed in a function.
     * dvt75221 - Fix a vopt crash when error 7030 is downgraded to
       warning.
     * dvt67917 - Report an error when an inout port having variable index
       is passed to a module. For example passing a[i] to module bot (bot
       b1(a[i])) where i is a variable.
     * dvt74398 - Corrected the display of hierarchical name in case of
       tagged union.
     * dvt75604 - Fix a vlog crash while using bitwise XOR on an array
       whose bit select is $urandom_range(). Example:-
       check[$urandom_range(3,0)][$urandom_range(9,0)]^=1'b1; where check
       is defined as "bit [9:0] check [3:0];"
     * dvt75258 - Fixed a vopt crash when bind statement is used inside an
       generate which is further inside an interface.
     * dvt75568 - Fixed a bug where clocking block with clocking event
       with iff condition was causing a crash sometimes.
     * dvt75044 - A parametric interface referenced as a virtual interface
       could issue invalid errors in vopt for generate scopes that were
       not live.
     * dvt76118 - A typedef for a queue in a base class wasn't being
       properly handled in the child class.
     * dvt75895 - Vopt used to report following internal error for few of
       the cases involving parameters and parameterized types. This is now
       fixed. ** Error: test.sv(1): Questa has encountered an unexpected
       internal error: ../../src/vlog/vtree_dt2.c(1645). Please contact
       Questa support at http://supportnet.mentor.com/
     * dvt76214 - Fixed an issue where non-blocking assignments to the
       inputs of clocking blocks were not getting flagged in some cases,
       resulting in occasional crash of the tool. Now, an error message is
       generated for such a case. The error number is 8440.
     * dvt75528 - Allowed a virtual function to be overridden by a pure
       virtual function. Below example will work after the fix. Example:-
       class a; virtual task body(); $display("hi, i am in a"); endtask
       endclass virtual class b extends a; pure virtual task body();
       endclass
     * dvt76021 - Fixed the vsim results in novopt mode when out of bound
       array element is passed in port connection.
     * dvt76314 - Fixed a bug in $enable_signal_spy/$disable_signal_spy
       which resulted in error(vsim-3861) in cases where absolute path for
       the signals is not given with these system calls. For example
       following usage which used to give error will now work correctly:
module top_tb;
...
$init_signal_spy("top_tb/sig1", "top_tb/sig2", 1, 0);
$enable_signal_spy("top_tb/sig1", "top_tb/sig2", 1);
...
endmodule

     * dvt76400 - Fixed a bug which resulted in false error(vsim-3045)
       while calling a SV task/function with default values of arguments
       from verilog. For example following usage which used to give error
       will now work correctly:
test1.sv :
//this file compiled as SV source code
...
task setup_gpio(int a = 1);
...
endtask
...

test2.v :
//This file compiled a verilog source code
...
tb.setup_gpio();
...

     * dvt76285 - Added compile time error which makes sure the name does
       not already exist in the scope with the same direction. Following
       usage is now compile time error :
 clocking clk_blk @(CLK);
        default input #0;
        input port1;
        input port1;
  endclocking : clk_blk;

     * [nodvtid] - A net having multiple drivers with varying strengths
       resolved to an incorrect value in some cases.
     * dvt76661 - The compiler incorrectly issued a "data size overflow"
       error for large unpacked arrays and structures that overflowed a
       32-bit integer size even when compiled for 64-bit.
     * dvt76961 - Fixed an issue when multiple part-select expressions are
       used in foreach loop.
     * dvt76247 - Fixed a vsim error when default type parameter (T)
       passed to a class (A) is of another class type (B) whose parameter
       is a virtual interface (x). For example class A#(type T =
       B#(virtual interface x));
     * dvt77400 - (results) In some cases a bogus vsim-3391 'Requested
       memory exceeds physical memory' message can be generated when
       relatively little virtual memory is actually being used but very
       large objects are being allocated and freed while processing
       dynamic arrays and similar objects. In 10.3d and 10.3e it will
       generate a Failure messages that stops the simulation. It can be
       resumed with a second run command, or the 'suppress 3391' vsim
       switch can eliminate it. In 10.4 it is will not stop the
       simulation. It can be suppressed the same way. If the operating
       system shows that the process is indeed larger then physical
       memory, then the message is not bogus, and suggests that poor
       performance will result due to heavy paging. After the fix the
       transcript file will no longer contain the bogus message.
     * dvt77310 - Type-casting $cast function with void will not result in
       error even when casting operation fails. For example following will
       not result in error when $cast fails :
void'($cast(d_obj, c_obj));
     * dvt77198 - Fixed a bug in case within statement which resulted in
       wrong simulation results while having more than 32 cases.
     * dvt70538 - Typedef defined in super class would sometimes not
       visible to derived class. This has been fixed.
     * dvt75289 - Incorrect signals were sometimes shown up in the wave
       window, this has been fixed now.
     * dvt77431 - Fixed a vsim error when return type of an external
       function in parameterized class is the self referential class.
       Example:- function my_class#(my_class::PARAM1) my_class::get ();
     * dvt75438 - Fixed a vlog crash when new() is called on a forward
       typedef class.
     * dvt62347 - (results) vlog-2292 error incorrectly printed "OVM"
       related message regardless of whether OVM or UVM loading failed.
       This has been corrected to reflect the right context.
     * dvt76928 - (results) This was a bug in the context of a function
       inside a class. If the function has a default value for an argument
       and the argument has exactly the same name as the default value ,
       then this was leading to incorrect results. This has been
       corrected. A sample example of the bug scenario :
package p1;
        int num = 1;
        class C;
        function int get_int(int num = num );
            return 1;
        endfunction : get_int
        endclass
endpackage : p1

module top;
    import p1::*;
                C c = new;
                initial begin
                c.get_int();
                end
endmodule : top

     * dvt77231 - (results) Fixed a bug in usage of tagged unions inside a
       case statement inside a task.
     * dvt77144 - (results) Questa was incorrectly allowing some wrong
       syntax involving the keywords 'this' or 'super' along with
       class-specialisations to parse in vlog. This was resulting in
       errors later in vsim. Have fixed this behaviour. Here is a sample
       scenario.
package pkg;
   class c1#();
       virtual task run();
       endtask
   endclass
   class c2 extends c1;
   endclass;

   class c3 ;
      virtual task run();
      endtask
      task t();
        this.c1#()::run();// this gives a syntax error now
      endtask
   endclass
endpackage

     * dvt77608 - cosim libvsim.so exported symbol changed to avoid
       collision.
     * dvt77618 - Under some circumstances, use of 'bind' with an
       interface when using +floatparameters could result in a crash on a
       statement using a virtual interface that points to the bind target.
     * dvt68429 - (results) Added the support for alias of a wreal net.
     * dvt77905 - (results) vopt didn't properly handle wildcard ports
       (".*") in bind instances when -pduspec or -tbxhierrefs was
       specified.
     * dvt6636 - (source) We previously were not type-checking assignment
       patterns used with queues, and allowing a long-obsolete construct
       that wasn't caught until runtime.
     * dvt78506 - When instantiating a Verilog module from VHDL, passing
       an empty string to a parameter could result in memory corruption.
     * dvt16002 - (results) Indexing into a parameterized wire register or
       array could result in an error, or incorrect results.
     * dvt78472 - (results) Fixed a bug related to class specializations
       created in extern functions of a class. Before the fix , this bug
       was leading to creation of multiple specializations of a class for
       equivalent set of parameters.
     * [nodvtid] - In some cases redefined macros were not overwriting
       previous macro definitions.
     * dvt77832 - vencrypt would generate syntax errors when the last
       token in a file was a name from a `(tick) name.
     * dvt78513 - Fixed a bug in parsing of modport expression.
     * dvt78508 - Change a Time value error into a new warning if time
       value can not be stored in 32 bits. Rightmost digits greater than
       32 bit number will be truncated. For example 52111111561111ns will
       be truncated to 52111111500000ns.
     * dvt78334 - Fixed a bug when we have multiple packages with same
       name in different libraries.
     * dvt78035 - Fixed a vopt crash in a scenario when interface
       parameter is initialized through hier-ref and hier-ref is a
       structure field. Example :- interface isi_bus_if
       #(isi_bus_pkg::bus_param_t BUS_PARAM =
       isi_bus_pkg::bus_param_defaults) (); localparam ADDR_WIDTH =
       BUS_PARAM.ADDR_WIDTH; endinterface
     * dvt31479 - Fixed a bug when interfaces are concatenated while
       passing in ports.
     * dvt76678 - Fixed a bug where we were not giving error when we were
       assigning nested virtual interface to an interface with different
       parameters.
     * dvt77732 - Fixed a vsim package import export error when some files
       are compiled with -timescale option with vlog and other files are
       not compiled with -timescale. This has been fixed now.
     * dvt38559 - Added checks to give warning while doing illegal static
       casting of class objects. These warnings can be converted to error
       using -pedanticerrors.
     * dvt76541 - Fixed a bug which resulted in crash when overriding a
       parameter with a variable. Now user will get an error for such
       usage.
     * dvt77232 - Fixed a bug for bind instances, which resulted in
       simulation getting hanged.
     * dvt79480 - (results) Fixed a bug which results in reversed bit
       connections, when a concat expression is passed to an unpacked port
     * dvt78775 - (results) Under certain circumstances, use of "++" or
       "--" as an index into an array would result in the variable being
       incremented or decremented 2-3 times, instead of just once.
     * dvt79110 - Fixed a vsim error when an array with more than 32 bit
       length is used.
     * dvt79011 - Fixed a memory corruption when the index of an
       associative array is of type bit.
     * [nodvtid] - (results) Corrected resizing and padding of data field
       width when width is provided with format specifier for data
       display. Leading zeros are suppressed and replaced by spaces when
       displaying decimal values. In other radices, leading zeros are
       always displayed. Old display behavior is preserved under sv
       extension 'lfmt' in vsim.
     * [nodvtid] - (results) Modified identifier name length limit in
       parsing message from 20 to 50 to avoid name truncation.
     * [nodvtid] - (results) Fixed the data read by fread in bit select or
       part select of integers from a file.
     * [nodvtid] - (results) A ref argument in the new operator of
       covergroup will be treated the same as a read-only const ref
       argument. Added svext 'ncref' in vlog for old behavior i.e. ref
       argument will not be treated as constant unless specified.
     * [nodvtid] - Added new command line options ("-32", "-64") in sdfcom
       to choose relevant executable.
     * dvt79782 - A select of a hierarchical reference to a net within a
       concatenation connected to an input port resulted in an elaboration
       crash in some cases.
     * dvt79924 - A cell module containing specify timing and system
       function calls resulted in a vopt crash in some unusual cases.
     * dvt79543 - (results) Fixed an issue that would cause randomize() to
       return 0 for some non-contradictory scenarios involving a single
       4-state random variable and a single 'dist' constraint.
     * dvt79679 - (results) In some rare cases, randomize() would generate
       differing results for a fully optimized simulation vs. a simulation
       where +acc is enabled. This issue has been fixed.
     * dvt80089 - An indexed slice of a multi-dimensional packed array
       could result in an erroneous runtime error.
     * dvt73180 - (results) In some rare cases, randomize() will produce
       spurious results for random variables involved in a !inside
       (not-inside) constraint if the LHS and RHS contain random
       variables. This issue has been fixed.
     * dvt80393 - Specifying multiple comma-delimited extensions via the
       "vsim -svext" switch would result in an error. This issue has been
       fixed.
     * dvt80351 - (results) An input port which is not declared as 'wire'
       or 'var' should default to 'wire'. Previously, we were treating an
       input port of 'enum' type as a 'var'.
     * dvt79748 - Fixed a crash in a scenario when derived class uses
       static class member of super class. Super class is also derived
       from another class which have one non static member with same name
       as of static member. For example class C is derived from class B
       and class B is derived from class A. Class A has some non static
       class member with name as D. Class B has static member with name as
       D. When D is accessed from class C we were getting a crash. This
       has been fixed now.
     * dvt80404 - Improved an error message vsim-3373 which will now print
       the bound values in case of part select of an array. If the array
       is of type dynamic then no bound values of array will be shown.
       Earlier there was no error id at vlog/vopt time, now the error id
       3373 will be used to give the error.
     * dvt80265 - Fixed an error when localparam string array is getting
       initialized.
     * dvt80175 - Fixed a vopt hang when it try to evaluate the value of
       multi dimensional array of type bit.
     * dvt80297 - Fixed a vlog crash when two coverpoints point to same
       variable in parameterized class.
     * dvt80596 - (results) In some rare cases, randomize() would trigger
       an internal error in slvACTContext. This issue has been fixed.
     * dvt78381 - (results) Added "ddup - Drive default unconnected port"
       in sv extension. Previously(Before 10.5) explicit named unconnected
       ports were driven by default value of port, now it will be 'z' or
       'x'depending on port being used is wire or reg. User can get the
       old behavior by using -svext=ddup. 10.5 on wards the behavior is as
       per "LRM 1800-2012 (23.3.2.2 Connecting module instance ports by
       name) : If an input port with a specified default value has an
       explicit empty named port connection [i.e.,.port_name()], then the
       port shall be left unconnected and the default value shall not be
       used."
     * dvt81103 - Fixed a small memory leak related to resizing a 'rand'
       or 'randc' dynamic array during randomize().
     * dvt81155 - (results) In some situations a release on a register
       which had a force in effect fails to trigger a continuous
       assignment to that register.
     * dvt81118 - (results) The 'index()' method, when used inside a
       nested array manipulation method, would return the wrong value.
     * dvt80536 - (source) It is not permitted to change the protected
       status of an existing design unit by recompiling it, it must be
       deleted from the library and then recompiled.
     * dvt77481 - (results) Fixed cascaded sequential UDP issue. New
       behavior is more aggressive in finding cascaded SUDP and handling
       them.
     * dvt75730 - A name resolution error could result if an interface
       with an interface port formal and the actual interface instance
       passed to the formal were both instantiated within the same
       generate loop and the interface had additional interfaces
       instantiated within it.
     * dvt81161 - Support of $error/$stop systask usage in optimized cell.
     * dvt82072 - (results) When multiple PLI/VPI applications are
       involved in the simulation, different applications may register the
       same kind of callbacks, i.e. end of compile callback. The ordering
       of callbacks between PLI and VPI may become nondeterministic and
       can be affected by the addition/removal of some other irrelevant
       PLI/VPI application. A fix is put in to remove this aspect of
       nondeterminism. To revert back to the old behavior, one can use the
       new vsim switch -vpicompatcb introduced in 10.5.
     * dvt80235 - Fixed a vopt error when localparam is assigned as
       unpacked array concatenation.
     * dvt79870 - Fixed a vopt crash when multi-dimensional array of
       interface is used as single dimension.
     * dvt81618 - Fixed a vsim crash when a class function is never
       defined and some other variable is initialized in that class.
     * dvt81318 - Fixed a misleading error vlog-2388 when an array of
       modport is declared in port connection and modport array dimension
       parameter is undefined.
     * dvt80829 - Fixed a vopt crash when array of modport is used as C
       style dimensional array.
     * dvt80968 - Fixed an invalid error when interface array is used and
       vopt is not able to calculate the value of array dimension due to
       floating of parameters or in some other corner scenarios.
     * dvt80196 - Fixed a vlog crash when a parameterized class is
       instantiated with non existing parameters.
     * dvt80475 - Fixed a crash when randomize 'with' function is called
       inside foreach loop.
     * dvt80753 - Downgraded a fatal error to a suppressible error
       (vsim-12064) when multiple version of interface are found in the
       design.
     * dvt81544 - Fixed a bug in vopt which resulted in internal error
       when concat expression is passed as port actual
     * dvt82080 - Fixed a bug in vopt for shift operator which resulted in
       different simulation result with and without +acc.
     * dvt80676 - Fix a bug in vsim which resulted in wrong results for
       streaming concatenation operator.
     * dvt80674 - Checks have been added in vlog to look for stray
       semicolons in declarative regions of task/functions and give
       appropriate errors.
     * dvt78096 - (results) Fixed a crash which was happening in vsim
       during restart. This was related to issues in package loading
     * dvt80469 - (results) Fixed a bug in handling of an assign statement
       inside a for-loop in verilog. Was already working in SV flow.
     * dvt82348 - (results) Fixed the parsing errors related to empty
       clocking event field in $past and similar calls. LRM allows giving
       empty arguments to these calls.
     * dvt82422 - (results) Fixed an assert failure when there is a
       part-select on an element of a packed struct in the RHS of an
       assign statement.
     * dvt82551 - (results) Fixed an assert failure in vopt where
       out-of-bounds index of a vector is being used in a concatenation.
     * dvt75654 - (results) SDF back-annotation now works with anonymous
       Non-ansi type source and destination ports.
     * dvt82719 - Fixed a bug which resulted in wrong simulation results
       while doing NBA assignment to packed structure.
     * dvt82730 - Fixed a bug which resulted in simulation crash while
       using a "new[]()" to initialize a dynamic array of "rand" type
       using an array of constant width.
     * dvt82580 - Fixed a bug which resulted in simulation crash while
       using ternary operator with nets.
     * dvt82241 - Added a new note to notify user that the simulation
       ended due to implicit $finish from a program.
     * [nodvtid] - Vsim crashed with array index references in an inline
       randomization constraint where the index variable was defined
       inside a begin..end block.
     * dvt83328 - (source, results) A new svext switch -svext=arif (allow
       ref in fork) was added to support use of refs in fork-join_any or
       fork-join_none blocks inside tasks. Use of refs in fork-join_any
       and fork-join_none blocks is an error by default.
     * dvt83309 - (results) Under an 'always @(*)', an external reference
       with a non-constant index was not properly being added to the
       sensitivity list. An example woule be 'my_if.data.info[i].id',
       where 'i' is a variable. Now, 'my_if.data.info' will trigger the
       always block.
     * dvt83160 - Fixed a vopt error 2132 when parameter value as
       assignment pattern expression is passed through module parameters.
     * dvt82478 - Fixed a vsim error when Questa is not able to find some
       variables of interface port due to bind.
     * dvt82376 - Made the error 12038 suppressible and added to
       permissive list.
     * dvt81779 - Fixed a vsim error 3043 when same package name appears
       in multiple libraries.
     * dvt83035 - Fixed a vsim crash when a non constant function is
       passed as a delay to assign statement.
     * dvt83603 - Using a parameter array index reference as the offset in
       an indexed slice range could lead to an internal error like:
       # ** Error: test.sv(5): Questa has encountered an unexpected
       internal error: ../../src/vlog/vgencode.c(212).
     * dvt83318 - Fixed a bug where two checker instances with the same
       name were getting created in the same scope. Now a check is
       performed and an error is issued.
     * dvt83799 - Fixed a bug where vlog was crashing when inferred clock
       is used as default in the formals of a checker and the checker is
       instantiated without any actual arguments.
     * dvt83761 - Fixed a tool crash due to default clocking in the nested
       checker.
     * dvt83838 - Added check for procedural instantiation of checker
       inside another checker. It is an error to instantiate checkers in
       the procedural blocks of a checker.
     * dvt73179 - (results) Fix an improper vopt optimization when DPI
       import call is involved in an always block.
     * dvt84015 - (results) The non-standard feature of System Verilog
       "force" and "release" statements that target a select of a variable
       (as opposed to a net) do not fully support a non-constant rhs. A
       warning is issued to this effect, and the resulting behavior may
       not match the expected behavior for force and release semantics
       involving a non-constant rhs. The behavior has been changed in this
       release such that the rhs is evaluated just once at the time the
       force is executed and is applied as though it is constant and does
       not update forced value subsequently when any of the rhs variables
       change value. Previously, the forced value would be updated when
       the rhs variables change value, but any subsequent force or release
       on the same target would not cancel the force. This old behavior
       can be selected by specifying the vsim -reevalvarbitforces option.
     * dvt84358 - Fixed a vopt crash in an optimization of an always
       block.
     * dvt79743 - Questa used to report an illegal error on passing
       unsized literal values as actuals to ports of type union. This is
       now fixed.
     * dvt81538 - Vopt used to crash, with full optimization enabled,
       involving a literal passed as a port actual through a hierarchy.
       This is now fixed.
     * dvt80112 - Vopt used to report an internal error involving function
       chaining expression inside task. This is now fixed.
   _______________________________________________________________________

   VHDL Defects Repaired in 10.5
     * dvt72143 - If an uninstantiated package contains signal
       declarations, and an instance of the package is associated with an
       interface package in an entity, package, or subprogram
       instantiation, accesses to the signals could lead to simulator
       error messages of the form:
# ** INTERNAL ERROR: pkgref: export lookup failed for package #8[7]

     * [nodvtid] - An object of a composite type that has a subelement of
       some null-range scalar subtype, when declared with no default
       expression (class SIGNAL object) or initial value expression (class
       VARIABLE object), would not cause an error as it should. Such
       object declarations are illegal because no value (default/initial
       or otherwise) can be compatible with such a composite (sub)type.
     * [nodvtid] - The predefined package ENV was introduced in VHDL 2008,
       to be in library STD. While this package is available for VHDL
       versions other than VHDL 2008, using this package will produce a
       warning message unless the VHDL 2008 language version is in effect.
       It is possible to suppress or otherwise change the message severity
       level.
     * dvt72793 - A PROCESS(ALL) statement in which the ALL represents no
       signals would result in the process having no termination (infinite
       loop).
     * dvt71423 - Fixed an issue related to recursive instance having
       generate loops further having VHDL or Verilog instances. In these
       cases we either get errors like 'code not found' in vsim or 'failed
       to access library' or 'unable to load design unit' during vopt.
     * dvt73051 - Fixed elaboration crash with subelement association. The
       formal must be an element or subelement of a multidimensional port
       and the actually a 2008 signal expression.
     * dvt72382 - Optimized mode was not reporting multiply driven
       unresolved signals in rare instances of driving package signals.
     * [nodvtid] - Aggregates of signals in subprograms, either as
       parameters to other subprogram, or as targets of signal assignments
       could cause a crash if the aggregate contained both parameters and
       non-parameter signals.
     * dvt73471 - (source) Symbols defined only in the body of an
       uninstantiated package were accessible to other design units either
       through a USE clause or explicit scope identification. Customer
       designs that previously took advantage of this error, referencing
       symbols defined only in package bodies, need to be changed to
       either remove the offending references, or move the declarations of
       the symbols to their uninstantiated package headers.
     * dvt74036 - vopt would crash if an object from an instance of a
       generic package was used within a configuration.
     * dvt74124 - Vcom could fail with an internal error when a port map
       statement is present on a block
     * dvt74313 - If an attribute that returned a range is used as the
       expression to a return statement, incorrect machine code could be
       generated. A range is not a valid return value and is now flagged
       as an error a compile time.
     * dvt63309 - In some cases vopt would generate a unexpected message
       about null ranges. Like:
       # ** Warning: [3] test.vhd(3): (vopt-1246) Range 1 to 0 is null.
       The number of these messages have been greatly reduced.
     * [nodvtid] - Logging of composite type variables with embedded
       access type subelements would sometimes not detect and record
       changes to those subelements.
     * dvt75643 - Performance of designs that perform many file open/close
       operations could degrade significantly when transitioning from any
       version prior to 10.4 to 10.4. File open/close processing has been
       improved to eliminate this degradation.
     * dvt75836 - Compilation of VHDL source code would generate temporary
       data in a flat library causing it to grow without bound. The
       temporary data is now cleaned up at the end of every compile.
     * dvt71451 - Predefined attribute A'ELEMENT could not have as its
       prefix a function call. The LRM is not clear on this since A must
       be either an array type name or appropriate for an array object,
       and a function call is neither. But because other attributes like
       A'RANGE where A is a function call are handled as legal, the
       A'ELEMENT attribute now also allows this. Further, as a
       non-compliant extension of the language O'SUBTYPE may also have O
       be a function call.
     * dvt74123 - In a subprogram appearing in a protected type body,
       another subprogram call with a named association element for a
       formal having the same name as a data member of the protected type
       would cause a compiler error. This is now fixed.
     * dvt73707 - Individual association involving a multidimensional
       array type formal whose index subtypes are enumeration types would
       not compile. This has been fixed.
     * dvt74843 - The compiler would hang if it encountered a VHDL error
       involving a type declaration of an array type whose element subtype
       is an incomplete type of the same name as the array type itself.
     * dvt70676 - Some uses of A'RANGE (and A'REVERSE_RANGE) where a value
       (not a range) is required were not being caught as errors by the
       compiler.
     * [nodvtid] - Writing a value to a file of a type whose type mark is
       a scalar subtype that has a range constraint would not check that
       the value belonged to the subtype. This has been fixed.
     * dvt67887 - Associating a signal alias with a port, where the
       subtype indication of the alias declaration is a partially
       constrained record, would result in a design that would fail during
       elaboration.
     * dvt73631 - If a subprogram instantiates a package, and then calls a
       subprogram of the package, variables of the called subprogram may
       not be visible or accessible in the graphical interface or through
       the examine command. In addition, if the design is optimized with
       vopt using the +cover switch to enable code coverage, during
       elaboration of the design, the simulator's console terminal may
       report errors of the form:
../../src/vsim/rtu.c(xxxx). Please contact Questa support at http://supportnet.m
entor.com/

     * dvt77077 - A crash could occur when using an output port as the
       actual to a subprogram formal that is a signal Rising_edge is an
       example of such a subprogram. Because of optimization, this doesn't
       no occur for all cases and maybe affected by the use of switches
       like -no1164 and -O1.
     * dvt76995 - A variable of a protected type that contains a data
       member that is of class FILE could not be displayed, examined, or
       logged properly. Since FILEs themselves cannot be logged, such a
       protected type variable will have the FILE data member be shown as
       "Not Loggable", and the WLF file (for post-sim viewing) will not
       show the variable as having this FILE at all.
     * dvt77275 - A Fatal error during elaboration could occur within an
       optimized vhdl process if signal valued attributes are used within
       that process. The name reported for the optimized processed will
       start #MERGED#.
     * [nodvtid] - Bad machine code would be generated in the case of an
       access type to an generic type and the generic type's actual is a
       record type. This could result in crashes or incorrect simulation
     * dvt77420 - Memory corruption could occur if a generic package is
       instantiated within the scope of a subprogram. Instances of a
       generic package outside of subprogram is unaffected by this issue.
       The memory corruption has been fixed.
     * dvt77769 - (results) A type conversion from a floating point type
       to an integer type will now produce an Error message if the
       floating point value is outside the range of a signed 32-bit
       integer. Also, a type TIME expression involving a floating point
       expression will produce an Error message if the result is outside
       the range of a 64-bit signed integer; in this case, the lower bound
       is -9223372036854775807, which is the smallest position number
       allowed for type TIME. Finally, a type conversion will check that
       the result belongs to the subtype denoted by the type mark of the
       target type.
     * dvt76976 - Use of access types that references a formal generic
       type would function inconsistently if the actual type is a record
       type.
     * dvt73987 - In Some particular cases, compilation time on windows
       had increased. This has been fixed.
     * dvt72396 - In Some specific cases, an optimization used to give
       incorrect results. This has been fixed.
     * dvt79007 - A package-declared signal used as an element of an array
       begin associated via individual association with a class signal
       procedure formal, where the procedure is declared in a place that
       is not the package, could cause a crash.
     * dvt79195 - Type conversion from a floating point value to an
       integer value of type INTEGER would incorrectly report an error if
       the value was the legal value of -2147483648; likewise for
       2147483647.
     * dvt79119 - The "change" command would not work if attempted on an
       access object or member of such.
     * dvt77970 - For some specific cases of aggregate expression,
       evaluation of expressions use to give incorrect error. This has
       been fixed.
     * dvt79538 - The in some case, if a VHDL block has unconstrained
       output ports The error
       # ** Fatal: (vsim-3420) Array lengths do not match. Left is 0 (0 to
       3). Right is (UNDEFINED) (UNCONSTRAINED ARRAY).
       could occur.
     * dvt76973 - Variable (including protected type data member variable)
       whose type was array of access to record, could cause a simulator
       crash if the vsim command "vsim" was used to load another (or same)
       design during the same session of the GUI.
     * dvt75261 - (source) If a locally static range of the first form
       (A'RANGE or A'REVERSE_RANGE) was used as the index range in an
       array subtype indication, there was no check that the range bounds
       were compatible with the index subtype of the base array type. This
       has been fixed.
     * dvt79780 - Logging an alias to a signal that is of a resolved
       composite type would crash the simulator.
     * dvt80970 - If a instance of a generic package is made directly
       visible with a via a use statement. Multiple references to the
       package will result in the error
** Error: fails.vhd(4): (vcom-1078) Identifier "pkg" is not directly visible. Po
tentially visible declarations are:
work.pkg in library work (package)
work.pkg at pkg.vhd(1) (declaration)

     * dvt80408 - Having an entity whose name is 200 character long or
       longer could cause the following error during optimization.
** Fatal: (vopt-8) Problem while reading data file
"/export/home/designtree/work/top_opt/vopt4km4ma".
** Error: (vopt-2064) Compiler back-end code generation process terminated with
code 2.

     * dvt81349 - Aggregate slices could compute incorrect values if the
       type of the aggregate is a subtype of std_logic_vector or
       std_ulogic_vector and is defined in a package not compiled with
       -2008.
     * dvt81559 - Changed the way VHDL assertion names are created when
       the assertion is inside a subroutine and the subroutine name
       matches with one of the operator symbols. Since this operator
       symbol is prepended in the name, we create an escaped identifier
       for the assertion name.
     * dvt81528 - Occasionally vcom, vopt, or vlog, could crash
       unexpectedly because of the command line arguments. Slightly
       changing the argument number or order can work around the problem.
     * dvt81757 - Fixes crashes at design load time as wells on commands
       that work on bits of a composite port like driver, add log, add
       wave, and other similar commands. The crash required that the
       actual connected to the port be a non-static expression.
     * dvt81883 - An attempt to log an empty array of records, whose
       fields also contain arrays, by explicitly using the log command, or
       by adding the array to the list or wave windows, could cause the
       simulator to crash.
     * dvt82617 - Certain known errors deferred until simulation runtime
       (because whether or not they would be executed is not known) would
       cause a vopt error and fail to create an optimized design.
     * dvt82698 - IF generates with mutually exclusive conditions could
       sometimes both be present when the generate condition contained
       expressions of a certain form, such as multiplication by a generic
       (integer) whose value was 0 in some instances, and non-0 in other
       instances.
     * dvt82810 - A function containing a nested function called to
       initialize a subtype of an object declared in the outer function
       could cause the design to crash when loaded.
     * dvt83738 - Incorrect code was generated for constant-index signal
       assignments when the array elements are generic types. As a result,
       the simulator could crash.
     * dvt81426 - If an array-valued signal has only constant-index signal
       assignments in a particular process, and the process contains an
       expression involving either the 'driving or 'driving_value
       attribute, incorrect code was generated for the attribute
       expression. As a result, the simulator could crash during
       evaluation of the expression.
   _______________________________________________________________________

   SystemC Defects Repaired in 10.5
     * dvt78678 - Fixed sccom leaving object files in the current working
       directory on a compile failure.
     * dvt82519 - DPI export task/function calls are not allowed by
       default in the SystemC start_of_simulation() callback. Use vsim
       option '-enabledpisoscb' or modelsim.ini variable 'EnableDpiSosCb'
       to enable DPI export calls from the SystemC start_of_simualtion()
       callback. The side effect of this option will be that any SystemC
       signal writes done in start_of_simulation() callback will not
       reflect the updated value at time 0. A delta cycle using wait
       statement needs to be inserted in the processes to get correct
       value updated for these signals. Also, with mixed language
       simulation, process execution order may change at time 0 with this
       option.
   _______________________________________________________________________

   SVA/PSL Defects Repaired in 10.5
     * dvt73226 - Fixed a bug where failure of a cover directive was
       getting considered as an assertion failure in assertdebug mode for
       figuring out if global fail limit for the assertions has reached.
       The global fail limit for the assertions is set using command
       'assertion action -global_fail_limit'.
     * dvt75755 - Fixed a bug where assertion control system tasks were
       causing compiler error if used in functions.
     * dvt77160 - Fixed a bug where using %c in severity system task
       ($error etc.) was causing the tool to crash.
     * dvt79482 - Fixed a bug where tool was giving internal error during
       compilation if the design contained a concurrent assertion inside
       an unnamed always block and the assertion had an action block with
       begin...end.
     * dvt80720 - Fixed a bug where nexttime property was not working
       correctly on the right side of implies property.
   _______________________________________________________________________

   Mixed Language Defects Repaired in 10.5
     * dvt72760 - (results) In a mixed language design with a verilog
       switch network the extended VCD output for a VHDL signal was not
       calculated properly.
     * dvt81137 - Allowed mixed designs to use hierarchical reference to
       VHDL port, before it has been fully elaborated.
   _______________________________________________________________________

   Verification Management Defects Repaired in 10.5
     * dvt72970 - Fixed bug that would prevent vsim GUI from being
       displayed when launched from the VRM GUI when vrun was running on a
       grid server.
     * dvt71582 - The keywords passed to the vrun "-select" option are now
       case insensitive. Unrecognized keywords result in an error which
       prevents a regression run from starting (as opposed to a warning
       that the offending keyword is being ignored).
     * [nodvtid] - In VRM, fixed a parameter search-order bug where
       pre-defined parameters or inherited foreach indices could shadow a
       more locally defined parameter of the same name.
     * [nodvtid] - In VRM, fixed bug with looking up RMDB parameters from
       the GUI that caused some menu items to remain disabled.
     * dvt74238 - In VRM, suppress status summaries when all of the counts
       in a particular summary would be zero.
     * dvt75204 - Fixed bug in VRM GUI where top-level Runnables with a
       repeating attribute (ie: repeat or foreach) would not be expanded.
     * [nodvtid] - Fixed bug in VRM GUI where <runnable>.ITERATION was not
       being defined for repeating Runnables.
     * dvt74716 - (results)
The assert scope requires some special case processing to compute "total coverag
e" for an assertion:
    If an assertion has both pass and fail counts
        It is 100% if pass count > 0 and fail count == 0
    else if it has only fail count:
        It is 100% if fail count == 0

The UCDB_ASSERT_SUCCESS_INST element of the summary record represents this perce
ntage.

The ranktest tool will use and report the 'UCDB_ASSERT_SUCCESS_INST' metric (whe
n possible). If there is any assertion failure in any test, it is a bug/problem
that must be addressed by the user.

Until ranktest detects a test that has an assertion failure:
 1. Ranktest will use the "%success metric" like the rest of our reporting tools
.
 2. The ranktest "total coverage" number will agree with the "total coverage" nu
mber our reporting tools.
 3. The "%success" metric will be reported in the "Assertions" column.

After ranktest detects a test that has an assertion failure:
 1. Ranktest will ignore the "%success" metric in its calculations.
 2. The ranktest "total coverage" number will NOT agree with the "total coverage
" number our reporting tools.
 3. A "-" will be reported in the "Assertions" column.
 4. A warning message similar to the following will be issued:

** Warning: (vcover-17208) One or more tests contain "assertion failures".
Ranktest will not include "assertion successes" in its ranking metric
calculations (i.e. "assertion successes" will be weighted as 0).

As a consequence, the ranking total coverage metric may be different from the to
tal coverage numbers of other Questa GUI and CLI tools. The reason for this alte
ration is that the "%success" metric is now exhibiting a NON-monotonically incre
asing behavior and can no longer be used in the ranktest "greedy" algorithm. Ran
ktest will NOT use the "assertion pass" metric in any way (neither with nor with
out assertion failures).
     * [nodvtid] - Fixed bug where expanding an RMDB in the VRM GUI
       sometimes resulted in an error.
     * [nodvtid] - Fixed two bugs in VRM GUI:
         1. Parameter named in "index" attribute was not being properly
            defined, and
         2. The "file" attribute of the "usertcl" element was not being
            parameter expanded.
     * [nodvtid] - Fixed bug in VRM GUI where mergefile and triagefile
       paths were not treated as relative to VRMDATA by default.
     * [nodvtid] - The "View" menus which display test/merged coverage and
       Results Analysis now work correctly in the VRM History viewer.
     * dvt75521 - (results) Fixed a defect that caused statement coverage
       to be skipped when statement coverage was explicitly selected along
       with other coverage types. This effect many of the "coverage ..."
       command supporting the "-code ..." argument. EXAMPLE ARGUMENT:
       "-code st".
     * [nodvtid] - In VRM, if a given Action is supposed to produce a
       UCDB, and does, but the UCDB is unreadable, the Action will be
       considered to have failed and the UCDB TESTSTATUS will be reported
       as "Unknown Error" in the VRM log.
     * dvt72260 - (results) The Test Analysis menu in Structure window was
       generating paths using "::" as a separator which are not valid in
       viewcov mode.
     * [nodvtid] - Under certain circumstances, the instance tree
       generated from an RMDB file (VRM) was not being expanded correctly.
     * dvt77329 - On the Runnables tab of the Configuration Edit dialog of
       the VRM GUI, attempting to un-check any of the selected Runnables
       after the "Show Latest Status" checkbox was checked would cause a
       TCL error.
     * [nodvtid] - Fixed bug in VRM (GUI only) where built-in parameters
       could be expanded incorrectly under certain conditions.
     * [nodvtid] - Fixed bug in VRM GUI such that mergeScript and
       triageScript Actions will now appear in the VRM Results Window in a
       more logical sequence with respect to the other Actions in the
       group under which they were executed.
     * dvt79297 - Fixed problems in VRM GUI where the status counters in
       the VRM Results window were not being updated in a timely manner
       and the Pending counter was not being updated correctly.
     * dvt79272 - Fixed problem in VRM GUI where foreach parameter in RMDB
       was not expanded correctly if the parameter value contains newline
       characters.
     * [nodvtid] - Filtering in the hierarchical view mode of the VRM
       Results window didn't always work as expected, depending on the
       exact filter expression. The filtering has been modified such that,
       in hierarchical mode, the filter only applies to the leaf nodes of
       the tree. Non-leaf nodes are always shown, regardless of the filter
       expression.
     * [nodvtid] - Fixed bug where Total and Testplan Coverage were not
       being properly reported to the VRM History window.
     * dvt79735 - In VRM, if there are multiple execution methods
       referring to the same named queue, the queue will use the minimum
       value defined for the maxarray/maxclubbing attributes.
     * [nodvtid] - Fixed bug in VRM where use of the "-exitcodes" and
       "-nosummary" command-line options in the same vrun command would
       prevent the proper setting of exit codes in the event of Action
       errors.
     * dvt81937 - (results) xml2ucdb fails to replace parameters with
       their values in links of xml type. This is now fixed.
     * [nodvtid] - Fixed bug where ActionCompleted user-definable
       procedure was not being called if an Action failed due to a launch
       error (which includes launch failures detected by the pro-active
       grid checker).
     * [nodvtid] - Fixed a bug that caused the VRM History window to throw
       a TCL error when attempting to read the history database.
   _______________________________________________________________________

   Power Aware Defects Repaired in 10.5
     * dvt73150 - In some cases, vopt used to crash during PA processing
       when SystemVerilog ++ operator is used. This has been fixed.
     * dvt73202 - In certain cases, Non UPF LRM usage of type
       "top/gen[*].mid/bot" in upf commands (like create_power_domain
       -elements) was resulting in a crash. This has been fixed now.
     * dvt72296 - The vopt used to hang in PA processing in doing analysis
       for static checks when add_power_state was used in UPF. This has
       been fixed by new algorithm to convert power states to
       corresponding PST states. This is enabled by vopt option
       -pa_enable=pwrstatecnv.
     * dvt72971 - In some cases, port punching semantics of UPF supply
       port/net are not happening while generating UPF file from save_upf.
       This has been fixed.
     * dvt74664 - The result of find_objects command is now dumped in a
       file specified with vopt option -pa_dbgfindobj=filename.txt
     * dvt75575 - Extended Power Aware static checks to analyze PST
       information for both power/ground pairs simultaneously when PST
       Composition is enabled. This is available with -pa_pstcompflags=pg
       option.
     * dvt76982 - With -pa_enable=verbosereporting option, the tool now
       prints the full hierarchical path of the power domain in
       report.pa.txt, report.upf.txt & report.mspa.txt.
     * dvt77535 - Fixed an issue where the design when run in PA mode the
       tool gives vopt error 12003 and 7033. Whereas in normal mode, these
       vopt errors did not occur. These errors are not present in PA mode
       now.
     * [nodvtid] - (results) Fixed an issue of wrong simulation result due
       to retention being applied on a signal in bitwise manner.
     * [nodvtid] - Fixed an issue of high disk usage due to excessive
       bind_checker commands applied on same scope.
     * [nodvtid] - In a specific case vopt PA was crashing due to
       CORRUPT_ON_ACTIVITY simstate. This issue has been fixed now.
     * [nodvtid] - In a specific case vopt was crashing due to UPF
       connect_supply_net command on hdl ports.This issue has been fixed
       now.
     * dvt78410 - During static analysis of power states and PSTs, the
       tool used to give pessimistic results when dont-cares are used in a
       case where a specific combination of supply values are assumed
       after expanding the dont-cares. This combination is not defined in
       other PSTs sharing the same supplies and hence should be ignored
       during expansion. This has been fixed.
     * dvt77969 - The vopt used to crash when a specific style of
       expression was used in add_power_state command. This expression
       results in a cyclic dependency of UPF objects referred in it. This
       has been fixed.
     * dvt79470 - Every PA dynamic check (assertion) will be limited to 15
       messages. Once this limit is reached, that particular dynamic
       message will be suppressed. This limit can be controlled by user
       using CLI " pa msg -suppressafter ".
     * [nodvtid] - (results) There was some noise in -pa_checks=t
       (QPA_PD_OFF_ACT) during power domain transitioning. This issue has
       been fixed now.
     * [nodvtid] - Vopt was throwing wrong error 2164 in case of nested
       modules. This issue has been fixed now.
     * [nodvtid] - There was a crash in xprop when using the option
       "report=suppress". This issue has been fixed now.
     * dvt80237 - Earlier tool used to give error when logic_port was used
       in control port option of power switch. This issue has been fixed
       now, tool now allows usage of logic_port in control port option of
       UPF command create_power_switch.
     * dvt79862 - (results) Fixed an issue in master-slave(also known as
       slave-alive) retention configuration. Now when the retention
       condition is active then the effect of clock, set or reset is
       ignored and the retained value is present at the register output.
     * dvt81090 - Fixed following issues being observed in PA reports (in
       case of a signal with width greater than 256) - Missing signal port
       in report.statc.txt (present in report.upf.txt) - Incorrect count
       in report.static.txt
     * dvt81498 - Changes in static report format to display 'sharing
       count' more intuitively. In stead of * notation we now display
       actual cell count followed by total crossings and Shared crossings,
       under vopt switch -pa_enable=verbosereporting.
   _______________________________________________________________________

   WLF and VCD logging Defects Repaired in 10.5
     * dvt65590 - The wlfman filter command could produce incorrect
       results when filtering Verilog nets that shared bits with other
       Verilog nets.
     * dvt75538 - Using the -wlftlim or -wlfslim switches to control the
       size of the WLF file could result in the wave and list displays not
       being updated correctly following a simulation run. The data in the
       WLF file was correct, but the windows would get confused by missed
       communications from the simulation kernel. The problem has been
       fixed.
   _______________________________________________________________________

   General Enhancements in 10.5
     * [nodvtid] - (source) There is a change in the meaning of "recursion
       level" specified to various vopt options like
       +acc/+noacc/+cover/+nocover/+initreg/+initmem. Before, this level
       meant how many levels under the current level, the option is to be
       applied. So, level 0 meant no recursion. Now, 0 recursion level
       means full recursion. And this option means how many levels
       including the current level, the option is to be applied.
       The following change in the recursion level keeps the options
       behaving the same way as before.
       previous: +acc=r+/top/r now: +acc=r+/top/r (no change)
       previous: +acc+/top. now: +acc+/top. (no change)
       previous: +acc+top+128 now: +acc+top+0 (full recursion)
       previous: +initreg+0+/top/du+0 now: +initreg+0+/top/du+1 (level ->
       level + 1)
       previous: +cover+lib1.du+2 now: +cover+lib1.du+3 (level -> level +
       1)
     * [nodvtid] - (source) Some of the +acc options are replaced with
       some other options. As of now, the old options are deprecated, but
       will continue to work to maintain backward compatibility.
       The following +acc options are not changed: +acc=mnprtv
       These +acc options map to the following new options:
       +acc=a -> -assertdebug +noacc=a -> -noassertdebug
       +acc=b -> -bitscalars +noacc=b -> -nobitscalars
       +acc=c -> -cellaccess +noacc=c -> -nocellaccess
       +acc=f -> -fsmdebug +noacc=f -> -nofsmdebug
       +floatparameters -> -floatparameters
       +acc=l -> -linedebug +noacc=l -> -nolinedebug
       +nosparse -> -nosparse
       +acc=u -> -primitiveaccess +noacc=u -> -noprimitiveaccess
       +acc=x -> -randmetastable +noacc=x -> -norandmetastable
       +acc=s -> -systfoverride +noacc=s -> -nosystfoverride
     * dvt73792 -
       1. The vsim "checkpoint" command now accepts a file or a directory
       as the pathname.
       Syntax:
       checkpoint [-dir] <pathname>
       The following are the two valid scenarios for specifying a
       directory as the <pathname>. In both these cases a checkpoint file
       named 'vsim.cpt' is created in the specified directory.
          + - The "-dir" option is specified with the <pathname>. If the
            directory doesn't exist then a new one is created.
          + - The "-dir" option is not specified with the <pathname> but
            it represents a pre-exisiting directory.
       It is an error if "-dir" is specified but the <pathname> represents
       a regular file.
       2. vsim's "restore" CLI command and the command line switch
       "-restore" now accept a file or a directory as the pathname. (The
       syntax has not changed, only the semantics).
       Syntax:
       restore <pathname>

     * - If the <pathname> represents a pre-exisiting directory, then a
       checkpoint file named 'vsim.cpt' must exist in the specified
       directory.
     * - Otherwise the <pathname> must represent a checkpoint file.

   3. When the checkpoint is represented by a directory the following new
   function, declared in "mti.h" file, returns that directory name.
   extern char * mti_GetCheckpointDirname PROTO((void));

     dvt25231 - The following license related items are added to
   'simstats' command report.
   [simstats verbose]
   New 'elab' report item is added for checked-out license features names.
   Example:
   # elab: license features used qhsimvl
   [simstats license]
   New 'License Statistics' section is added for checkout time and
   checked-out
   license features names. Example:
   # License Statistics
   # license: checkout time 0.05 s
   # license: features used qhsimvl

     [nodvtid] - Vsim memory reported by questa will now be the peak
   memory attained by the vsim process rather than the memory at the
   completion of the vsim process.

     [nodvtid] - (results) Error ID 2411 and 2412 have been assigned to
   permissive error messages 'Enum. range value must be a non-negative
   integer' and 'Enum. range must be a positive integer' respectively.
   These messages can be suppressed with '-suppress' now. Verror help has
   been added to these IDs too.

     dvt77101 - vlog, qverilog, mc2com and vsim have a new option '-vv' to
   print the C/C++ compile/link subprocess command line information.
   Additionally, mc2com and vsim in the MC2 mode will print the MC2
   subprocess command line information.

     [nodvtid] - Added a command line option 'msgsingleline' to print a
   multiple line message in a single line.

     [nodvtid] - (results) There are multiple VPI changes to the class
   model to align it more closely to the LRM, and to make it more useable.
   Class object names are now aligned to the GUI names. More vpi_handle
   and vpi_iterate queries have been implemented, affecting among other
   things vpiClassTypespec, vpiClassObj, and vpiClassDefn objects. Queries
   for file and line information on class objects will return an error, as
   these objects are not anchored by definition to the source code.

     [nodvtid] - A new condition option has been added to the "bp"
   command. The "-ancestor" condition option added to a breakpoint will
   stop the simulation only when any ancestor parent of the process
   matches the given process-name.

     [nodvtid] - Usability improvements and bug fixes have been made to
   Questa's library search features. There are no known incompatibilities
   with earlier library search operations. All working designs will
   continue to elaborate as they have in the past. The following new
   features have been added to Questa's library search algorithm:
   1. A new option called -libverbose has been added to vopt and vsim.
   Specifying this option will result in more verbose messaging about
   library search and resolution operations.
   2. The -libverbose=prlib option will print out the -L or -Lf option
   that was used to locate each design unit loaded by vopt or vsim. This
   information is printed to the right of the existing "-- Loading design
   unit xyz..." messages.
   3. Libraries containing top design units that aren't explicitly present
   in the set of -L/-Lf options are now implicitly promoted to searchable
   libraries. They are placed at the end of the library search order. They
   will appear as -Ltop in the output of the -libverbose option.
   4. Physical libraries which appear in -L/-Lf options with filesystem
   path delimiters (i.e. '.' or '/') were previously not handled robustly.
   Now such options will create an implicit logical->physical mapping, as
   if a vmap command had been issued when variable AutoLibMappingis set to
   1 in modelsim.ini.
   Example:
   vopt -L ./path/to/lib1 -o opttop top
   This command will result in an implicit mapping of "lib1 =>
   ./path/to/lib1". This implicit mapping will occur as long as there is
   no other logical library present with a matching name (lib1 in this
   case). Any implicit mapping which does not occur for any reason is
   flagged with a suppressible Note.
   5. Questa now searches for top level du's in -L/-Lf paths. These are
   searched after vsim -lib and vopt -work.
   6. vsim and vopt now print a list of all visible top level libraries if
   a top level du can't be found during the library search algorithm.

     dvt29640 - A new option has been added to vsim to control behavior of
   the simulator when there is an elaboration error.

   The option -onElabError value will direct the simulator to take
   different actions based on the given value.

   Option values for this switch are "exit", "resume", and "stop".
     * exit - vsim will exit after getting an elaboration error.
     * stop - vsim will stop and return control to the user. If a do file
       script is executing at the time of the error, the script will be
       paused.
     * resume - vsim will return control to the running do script. If the
       -do option was given on the command line and has not yet started
       executing, vsim will run the do script. If no do script is given,
       control is returned to the user.

   The default behavior when no -onelaberror option is specified is to
   "exit" when running in -c mode, and to "stop" when running in -i or
   -gui mode.

   The option may also be specified using lowercase: -onelaberror.

     [nodvtid] - For IP protection using encryption for VHDL and SV, we
   have added a new public key named MGC-VERIF-SIM-RSA-2 that has 2048 bit
   key length. This enhances our security and conforms to the
   recommendations in IEEE 1735-2014. All users of IP protection are
   encouraged to begin using this key. IP authors should verify that their
   Modelsim and Questasim product version requirements are satisfied. This
   key is not supported in older releases.

     dvt84671 - For IP protection in VHDL and SV, a new 2048 bit public
   key named MGC-VERIF-SIM-RSA-2 has been added. This provides enhanced
   security and conforms to recommendations in IEEE 1735-2014. IP authors
   are encouraged to start using this key immediately. They should confirm
   that the supported Modelsim and Questa versions for this key satisfy
   their needs.

     [nodvtid] - -memopt[=n] vopt option has been added to enable/disable
   peak memory optimization. Mode "n" values are 0,1,2,3,4. Mode 3 is
   default on. Mode 0 disables this optimization. Mode 1 & 2 enables less
   aggressive memory optimization. Mode 4 enables more aggressive memory
   optimization.
   _______________________________________________________________________

   User Interface Enhancements in 10.5
     * dvt10305 - The [add log], [add wave] and [add list] commands have
       the new -filter and -nofilter switches to allow a one-time
       modification of the WildcardFilter in the command invocation. The
       commands can take as many [-filter <f>] and [-nofilter <f>]
       arguments as the user would like to specify. The valid filters are
       exactly the same set of words that can be applied to the
       WildcardFilter. The filter used during a command starts with the
       WildcardFilter and then applies the user specified filters, if any.
       The -filter values are added to the filter, the -nofilter values
       are removed from the filter. They are applied in the order
       specified so conflicts are resolved with the last specified wins.
     * [nodvtid] - (results) A new feature called VHDL Access Path
       Expressions has been introduced which provides improved visibility
       and a more intuitive way of viewing VHDL access variables and
       objects in the Wave Window. Some of the features of vhdl access
       path expressions are:
          + More descriptive pointer values. Values are Dynamic Object
            Identifiers instead of hexadecimal memory address.
          + Access references may be expanded in place in the wave window
            rather than having to inspect individual access objects one by
            one.
          + Ability to add access_var.all to see dereferenced object
            values.
          + Ability to "cast" unconstrained arrays to constrained array
            type.
          + The [accessinfo] command gives metrix and reports about access
            object usage.
          + Enabled with -accessobjdebug switch or AccessObjDebug
            modelsim.ini variable setting.
     * [nodvtid] - The SystemVerilog interface class is now supported by
       the classinfo command. Two new subcommands have been added:
       implements and interfaces; the instances subcommand has been
       enhanced as well. See the Questa Command Reference Manual for more
       details.
       The examples below use this small design:
module test8;
  interface class M;  endclass
  interface class N;  endclass
  interface class X extends M, N; endclass
  interface class Y extends M;  endclass

  class A implements M; endclass
  class B extends A implements X; endclass
  class C1 extends B implements Y; endclass
  class C2 extends B; endclass
endmodule

classinfo implements [-dataset <ds>] [-tcl] [-n] [-o <outfile>] <class>

       The output is a listing of which SV classes implement which SV
       interface classes. If the <class> argument is an SV class, the
       output indicates which interface classes that class implements. If
       the <class> argument is an SV interface class, the output indicates
       which classes implement that interface class.
> classinfo implements M
# /test8/A implements /test8/M
# /test8/B implements /test8/M
# /test8/C1 implements /test8/M
# /test8/C2 implements /test8/M

> classinfo implements A
# /test8/A implements /test8/M

> classinfo implements B
# /test8/B implements /test8/M
# /test8/B implements /test8/N
# /test8/B implements /test8/X


classinfo interfaces [-dataset <ds>] [-tcl] [-o <outfile>] <interface_class_type
>


This command is similar to classinfo types.  The
<interface_class_type> argument is optional; if omitted, all interface
classes are be shown.  For example:


> classinfo interfaces
# /test8/M
# /test8/N
# /test8/X
# /test8/Y

> classinfo types
# /std::semaphore
# /test8/A
# /test8/B
# /test8/C1
# /test8/C2


classinfo instances [-dataset <ds>] [-tcl] [-o <outfile>] [-verbose] <class_type
>

       If <class_type> is an interface class, the output is all instances
       that implement that interface class. A new argument (-verbose) is
       available; if specified, the classname is included in the output
       with the instance name. For example:
classinfo instances -verbose M
# @A@1 /test8/A
# @B@1 /test8/B

classinfo instances -verbose A
# @A@1 /test8/A

       vs.
classinfo instances M
# @A@1
# @B@1

classinfo instances A
# @A@1

     * dvt27751 - Support two new variations for the "bp" command. Allows
       specifying the line-number only in the command. The command will
       use the source file of the current context. For example:
    bp 57

       The "bp" command will also accept the common gdb syntax of
       "file-name:line-number", for example:
    bp dut.sv:57

       Here is the full usage description for the "bp" command:
# Usage:
# HDL breakpoints:
#  bp location [options] [{command ...}]
#    location: {[filename] line_number | filename:line_number | in task_or_fcn}
#    options: [-id id#] [-label label] [-disable] [-uvm] [[-inst region]...]
#             [-cond {condition_expression}] [-appendinst]
#
# C breakpoints:
#  bp -c location [options]
#    location: {function_name | line_number | filename:line_number | *0xhex_addr
ess}
#    options: [-disable] [[-inst {systemc_module_instance_name}]...]
#             [-cond {condition_expression}] [-appendinst]
#
# Information:
#   bp [-query filename [line_number [line_number]]]

     * dvt9844 - The "when" command has been enhanced to support repeating
       time breakpoints. The -repeat switch works with "when" breakpoint
       expressions involving time ($now). Normally expressions involving
       $now will only trigger once. With the -repeat option the "when"
       breakpoint will reestablish the breakpoint when triggered so that
       it will fire again for the next time period.
     * dvt78258 - (results) Scripting of the simulator now supports nested
       "vsim -do" operations. The do-file specified in a vsim command that
       contains another vsim command with it's own do-file option will now
       execute the nested do-file. Previously, the -do option in a nested
       vsim command was ignored, with a warning. Existing scripts that
       have "vsim -do" commands will see different behavior.
     * [nodvtid] - The simulator now supports PLI catalog files. These
       files are supersets of tab files. A user can specify access to
       particular part of the design, when a particular system task is
       present in the user code, using these files.
     * [nodvtid] - (results) Vsim has always wrapped long output lines in
       the transcript file. Lines longer than 3000 characters are wrapped
       onto subsequent lines. There are now two new control settings that
       effect this wrapping behavior. The settings can be modified by
       changing variables in the modelsim.ini file, or by using two new
       "transcript" commands in a do file.
       WrapMode: The WrapMode variable controls wrapping of output lines
       in the transcript file. A mode of 0 will turn off wrapping, mode 1
       enables wrapping, and mode 2 enables wrapping and adds a
       continuation character, '\', at the end of each wrapped line except
       the last one. The default value for WrapMode is 0. (Note: this is a
       change from the behavior in 10.4).
       WrapColumn: The WrapColumn variable defines the column width where
       the line gets wrapped. This column is somewhat soft; the wrap will
       occur at the first white-space character after reaching the
       WrapWSColumn column or at exactly the column width if no
       white-space is found. The default value for WrapColumn is 30000.
       WrapWSColumn: The wrap will occur at the first white-space
       character after reaching the WrapWSColumn. If there is no
       white-space, the wrap will occur at the WrapColumn. The default
       value for WrapWSColumn is 27000.
       The command form of these variables are "transcript wrapmode ?n?",
       "transcript wrapcolumn ?n?", and "transcript wrapwscolumn ?n?",
       respectively.
     * dvt33631 - Wildcard expansion in the "add watch" command is limited
       to 150 items. A dialog box is presented allowing the user to accept
       the limit or cancel the operation. Accepting the limit will add the
       first 150 items to the window.
     * dvt82309 - The Search bar entry box will now grow to to use all
       available space in the width of the window.
     * dvt83067 - The Class Type column is now visible by default in the
       Covergroup WIndow.
     * dvt21036 - The Search bar options such as Exact Match and Case
       Sensitive, have been made persistent between sessions.
   _______________________________________________________________________

   SystemVerilog Enhancements in 10.5
     * dvt69162 - Comparison of packed data types and null is now allowed
       with option "-permissive" or "-suppress 2735. Given that packed
       data type used is not a parametrized type or hierarchical
       references.
     * dvt68872 - The -mfcu option is now supported when using -libmap.
     * dvt70976 - (results) SystemVerilog strings are now reported
       separately from dynamic arrays in the capacity report.
     * dvt74010 - The existing vsim switch "-nocrossautobins" is enhanced
       to handle a new alternate behavior:
       -nocrossautobins[=[uncond|cond]] Avoid generating auto bins in
       cross coverage computation.", when the value "cond" is specified,
       the auto cross bins are not generated only if there are one or many
       coverable user defined cross bins. when the value "uncond" is
       specified, the auto cross bins generation will be always skipped.
     * dvt73791 - plusargs(+) vsim argument values can now be overridden
       in -restore mode, and will take effect when simulation resumes
       after restoring the design.
     * dvt74612 - Added a new option 'iddp' to vsim -svext switch. vsim
       -svext=iddp can be used to ignore DPI disable protocol check. For
       example, the following fatal error will be downgraded to a
       suppressible warning. ** Fatal: (vsim-3765) The exported task or
       function 'block20' has been called from within a disabled context.
       This is illegal.
     * dvt68123 - (results) Improved handling of randomize() timeouts.
       Specify solver timeout threshold (in seconds) using any of the
       following methods: - vsim command line option: "-solvetimeout " -
       modelsim.ini [vsim] variable: "SolveTimeout=" - Verilog attribute:
       "solvetimeout=" A randomize() call will fail if the CPU time
       required to evaluate any randset exceeds the specified timeout. The
       default value is 500. A value of 0 will disable timeout failures.
     * dvt76148 - The -override_precision compiler switch allows the time
       units setting from a -timescale command line option to be used to
       override the `timescale setting of all modules.
     * dvt76165 - Allowed integral to string type assignments without
       going through a explicit cast under "-permissive" or "-suppress
       7070" option. Following usage will work with "-permissive" or
       "-suppress 7070" :
function void register_c(string name);
endfunction

reg r;
register_c(r);

     * dvt24003 - It is now possible to use an assignment pattern for a
       port-actual, where the formal is an interface-array port.
     * dvt77009 - (source) Vlog wasn't catching errors when comparing
       unpacked arrays and structs. These will now be reported, often as
       suppressible errors.
     * [nodvtid] - (source, results) There has been a change in the VPI
       interface to vpiAssertion class objects. The SystemVerilog 2012 LRM
       indicates that vpiAssertion objects may be iterated for from
       vpiInstance class objects only, not from all vpiScopes, however
       assertion objects may in fact be under other scope class parents.
       We have previously added these sub-scope descendant assertions to
       the instance assertion. This change makes the assertion iteration
       valid on all scope objects to bring it into line with similar
       vpiVariable iterations. A consequence is that sub-scope iterations
       are necessary to find all the assertions in an instance.
     * dvt76126 - (results) vlog error 13028 has been made suppressible.
       LRM requires the keyword 'inside' to be followed by a left brace.
       This error was already allowed to be ignored by -permissive
     * dvt78126 - (results) An LRM extension has been added to allow the
       use of array reduction methods on multi-dimensional unpacked
       arrays, without the need of using a 'with' clause. To use this,
       specify "-svext=ared" (for array reduction) on the vlog
       command-line. In that case, a multi-dimensional unpacked array will
       be treated as if it had a single dimension
       [0:total_number_of_elements-1].
     * dvt71352 - (results) Support of pulse Error/Reject behavior on
       INTERCONNECT delays on optimized cell inputs. Earlier error 12031
       was reported for such cases.
     * dvt76748 - -gblso option has been enhanced to accept multiple
       shared objects.
       -gblso <shared_obj>[,<shared_obj>...]
       When multiple shared objects are specified, they will first be
       merged internally and then loaded as single shared object.
     * dvt77101 - Warnings generated during the C/C++ source file
       compilation will be echoed to stdout by default.
       Additionally, vlog and qverilog have a new option -ccwarn
       [on|off|verbose|strict].
       The -ccwarn option will control the GNU warning/error flags for the
       C/C++ files compilation.
       Options are:
       on (default): compiles with -Wreturn-type, -Wimplicit,
       -Wuninitialized, -Wmissing-declarations gcc options
       off: compiles without any warning options
       verbose: compiles with the -Wall gcc option
       strict: compiles with the -Werror gcc option
     * [nodvtid] - Package symbols from subsequent import of package can
       now be exported using wildcard export only. These symbols may or
       may not be referenced in the exporting package. This enhancement is
       added under sv extension 'pae1' in vlog.
     * [nodvtid] - $fopen system call now allows adding 't' to other valid
       file type arguments, like 'rt', 'w+t', 'at+' etc.
     * [nodvtid] - New vopt switch -reporthrefs will replace the existing
       -tbxhierrefs. This new switch introduces several enhancements
       including following changes to the hierarchical reference report:
       1. The hierarchical references from command line are reported in a
       different section. 2. For each hierarchical reference object type
       information is printed.
     * [nodvtid] - Two new warning have been added to report cases
       involving $unit scopes and clashing design unit names. Warning
       13232 will be reported only by vopt. For instance, ** Warning:
       (vopt-13232) $unit scope 'pack_sv_unit' has changed since design
       unit 'foo' was last compiled. Warning 13233 will be reported only
       by vlog. For instance, ** Warning: test.sv(1): (vlog-13233) Design
       unit "pack_sv_unit" already exists and will be overwritten.
       Overwriting SystemVerilog $unit with different source files. Vlog
       will also report a warning when vlog complies a design unit but a
       VHDL design unit with the same name is already present in the work
       library. For instance, ** Warning: foo.sv(11): (vlog-13233) 'foo'
       already exists and will be overwritten. Overwriting a VHDL entity
       with a Verilog module. Vlog also report a warning when vlog
       observes that options have changed between two set of commands
       compiling the same design unit. For instance, ** Warning:
       inc1.sv(1): (vlog-13233) 'pack_sv_unit' already exists and will be
       overwritten. Design unit compiled with different set of options.
     * dvt79719 - Nets declared with a user-defined nettype are supported
       in this release.
     * dvt16598 - Added support for overriding parameter values from
       top-level verilog configuration. Example:
module adder #(parameter ID = "id", W = 8, D = 512) ();
  initial
    $display("ID = %s, W = %d, D = %d", ID, W, D);
endmodule

module top4 ();
  defparam  top4.a1.W = 2;
  adder  #(.ID("a1"))a1();
endmodule

config cfg2;
  localparam S = 24;
  design work.top4;
  instance top4.a1 use #(.W(11), .D(200));
endconfig

     * dvt76032 - (source) Reseeding simulation: Added a new VSIM command
       "sv_reseed " which will re-seed every SystemVerilog random number
       generator (thread objects, class objects) based on the specified
       seed (or "random", which will select a random seed). This feature
       can be used after a "vsim -restore" (or at any time) to modify the
       behavior of SystemVerilog random constructs (randomize, randcase,
       randsequence, $urandom, etc) from the point the "sv_reseed" command
       is issued forward. NOTE: There is a small performance impact (both
       speed and memory) on a simulation that has been reseeded.
       Restarting simulation with a new seed: The VSIM command "restart"
       now accepts a "-sv_seed " option, which will restart the simulation
       with the specified seed value (or "random", which will select a
       random seed). Previously, the "set Sv_Seed " command was used
       immediately before a "restart" to instruct Questa to restart
       simulation with a different seed -- this is no longer allowed (the
       "Sv_Seed" variable is now read-only).
     * dvt81147 - In some cases, use of an associative array whose key is
       a bit-vector of width > 32 could result in extremely poor
       performance. This has been addressed.
     * dvt81658 - Allow parameter type initialization from an interface
       port parameter type.
     * dvt81854 - (source) Added control options to alter the behavior of
       certain constraints during randomize() to generate significant
       differences in solution distribution. The options are controlled
       via the "vsim -svrandext" command line option:
       -svrandext=[+|-][,[+|-]]* Enable/disable non-LRM compliant
       SystemVerilog constrained-random language extensions Valid
       extensions are: nonrandstab - disable seeding of "non-random" class
       instances promotedist - promote priority of 'dist' constraint if
       LHS has no solve/before nodist - interpret 'dist' constraint as
       'inside' (ACT only) noorder - ignore solve/before ordering
       constraints (ACT only) skew - skew randomize results (ACT only) The
       new options are "nodist" and "noorder". The other options
       (nonrandstab, promotedist, skew) were previously set via the "vsim
       -svext" command line option, and have been moved to "-svrandext"
       (all SystemVerilog constrained-random related options are now
       grouped under "-svrandext"). Note that "nodist", "noorder", and
       "skew" only apply to the ACT solver engine.
     * dvt81953 - Added a non-standard enhancement to allows user to use
       slice size as a range expression instead of just simple types. For
       example following can now be used :
    target = {>> bit [31:0] {stream_bits}};

    instead of :
        typedef bit [31:0] new_type;
        target = {>> new_type {stream_bits}};

       This works with -permissive or -suppress 13244
     * dvt82483 - (results) Added a new SystemVerilog Constraint Solver
       extension, -svrandext=[+|-]forkjoinstab. By default this extension
       is disabled. When this extension is enabled, the random stability
       of parent thread is preserved when creating the fork/join
       sub-threads.
     * dvt82697 - (results) Within the context of a constraint, allow a
       random index expression for any packed variable (previously, this
       was only allowed on scalar packed variables). This non-LRM
       compliant extension is enabled by default, and can be disabled with
       "vsim -svrandext=-randpackidx" or with "vsim -pedanticerrors".
     * dvt82547 - (results) SystemVerilog Constraint Solver extension
       nonrandstab and forkjoinstab are enabled by default to improve the
       random stabilities. The simulation results from previous major
       releases may be changed as a result of the new stimulus generation.
       To revert back to the pre-10.5 simulation result, one can apply
       vsim switch -svrandext="-nonrandstab,-forkjoinstab".
     * dvt65531 - The PLI/VPI C files can be compiled using vlog. For
       example: The old flow:
vlog test.sv
gcc -o pli.o pli.c
gcc -shared -o pli.so pli.o
vsim -pli pli.so top

       In the new auto compile flow: vlog test.sv pli.c vsim top -P
       pli.pcat The PLI catalogue file is recommended when specifying the
       callback function linkage. Refer to the User Manual for more
       details.
       The existing vlog switch -ccflags will take the additional gcc
       compile flags.
       The existing vsim switch -ldflags will take the additional link
       flags.
     * dvt81353 - Added the vsim command line option "-sv_reseed ". This
       option is only valid when used in combination with -load_elab or
       -restore. If used with -load_elab, the effect of the -sv_reseed
       option is identical to the -sv_seed option. If used with -restore,
       the effect of the -sv_reseed option will be to issue a "sv_reseed"
       command, with the specified argument, immediately after the
       simulation is restored.
     * dvt78261 - (results) Changed the way vsim interprets invalid
       Sv_Seed values (passed in via the vsim "-sv_seed" command line
       option or the "Sv_Seed" modelsim.ini variable). In the past, when
       vsim encountered an invalid Sv_Seed value, an non-suppressible
       error message (vsim-7031) would be displayed and Sv_Seed would be
       set to 0. The new behavior allows the error to be
       downgraded/suppressed, and the value of Sv_Seed will reflect the
       32-bit truncated value of the invalid seed (the interpreted value
       of Sv_Seed will be displayed by the vsim-7031 error message).
     * dvt82275 - (results) The "vsim -sv_reseed" command line option and
       the VSIM "sv_reseed" command are now UVM aware by default (requires
       questa_uvm_pkg 1.2.3) -- when a UVM simulation is re-seeded, the
       random sequences generated by UVM will change as a result. This
       behavior can be disabled with "vsim -uvmcontrol=-reseed".
     * dvt35166 - (results) SV real data type now supported for
       covergroups.
     * dvt82524 - Added the support for environment variables in curly
       braces within include string literals with svext=evis.
     * dvt82369 - Allowed one argument in builtin function substr with
       svext=substr1. Second argument will be treated as end of string.
     * dvt17592 - Added the support of "%i" format specifier. This will
       print the hierarchical name of the instance of task enabling
       statement or function call.
     * dvt74675 - Added the support for dynamic cast for more than 32 bit
       value.
     * dvt72319 - (results) Added the ability to collect timing check
       coverage information for a module instance compiled +acc. The
       tcheck_set and tcheck_status can now be used to report pass/fail
       counts for each timing check.
     * dvt83013 - The protected state of a design unit can now be changed
       by recompiling. In the past this seemed to work with Verilog but
       was intentionally not allowed with VHDL. Now, both languages allow
       this, and the implementation has been made more uniform and
       correct.
     * dvt83570 - Added new vsim switch "-solvefailseverity" for
       specifying error message severity when randomize() failure is
       detected. -solvefailseverity= Valid values: 0 - no error (default)
       1 - warning 2 - error 3 - failure 4 - fatal
     * dvt83697 - SV variables having an initializer in the declaration
       are not allowed to trigger an always block at time zero, whereas in
       V2K mode those assignments do trigger top-blocking always blocks.
       Use the -svext=defervda compiler option to have these SV
       initializers trigger top-blocking always blocks.
     * [nodvtid] - Allowed case equality operator for string comparison
       under -svext=sceq switch.
     * [nodvtid] - Added a vlog and vopt -svext=tzas option that runs a
       top-blocking always @* at time zero, same as is done for an
       always_comb, meaning that the always block will behave as though
       triggered at time zero even if none of the variables and nets in
       the implied sensitivity change value at time zero.
     * dvt67978 - (source) Support for randomization of 'real' variables
       and constraints is provided in this release, with the exception of
       multiply and divide with 'real' operands in constraint expressions.
       This feature is an extension of the LRM that can be enabled and
       disabled using the "-svext=realrand" extension at compile and
       simulation time. This extension is enabled by default. Use
       "-svext=-realrand" to disable this extension at compile and
       simulation time. During simulation, any attempt to randomize 'real'
       variables or constraints will require a "svrnm" (SystemVerilog Real
       Number Modeling) licese. If the license check fails, the 'real'
       number support will be disabled.
   _______________________________________________________________________

   VHDL Enhancements in 10.5
     * dvt28206 - Added support to print assertion name as part of
       instance path for VHDL assertion error messages. The name shall be
       printed for the assertions which have a label.
     * dvt74960 - The message indicating -64 or -32 has no effect has been
       made to only appear when the switch indeed has no effect, and it
       has been added to the cataloged message system. Furthermore, on
       Windows where the option is not available, a catalog message comes
       out indicating so.
   _______________________________________________________________________

   SystemC Enhancements in 10.5
     * dvt75791 - Existing vsim switch -undefsyms is extended to vopt.
     * [nodvtid] - Accellera SystemC-2.3.1 version is now supported.
       Experimental features in this version that are enabled by
       SC_ENABLE_SIMULATION_PHASE_CALLBACKS and
       SC_ENABLE_SIMULATION_PHASE_CALLBACKS_TRACING defines are not
       supported.
     * [nodvtid] - The Accellera SystemC Verification Library (SCV-2.0.0)
       is now supported with SystemC-2.3.1 and SystemC-2.2
   _______________________________________________________________________

   SVA/PSL Enhancements in 10.5
     * dvt73467 - Assertion waveform incorrectly showed start attempt at
       every clock edge for 'if..else..' property in some cases when run
       with -assertdebug.
     * dvt73468 - Added support for setting actions for global fail limits
       based on severity of assertions. The command to be used to set the
       limits is 'assertion action' with -severity option.
   _______________________________________________________________________

   Mixed Language Enhancements in 10.5
     * [nodvtid] - -mlopt (Optimize mixed language nets) option of vsim
       has been enhanced to work with -mc2 option of vsim.
   _______________________________________________________________________

   Coverage Enhancements in 10.5
     * dvt74426 - Added a new vsim switch to enable covergroup runtime
       optimizations.

-cvgopt[=[+|-]<mode>[,[+|-]<mode>]*]

Enable Covergroup optimization modes. Valid modes are:

    minhitcnt - stop sampling coverpoint/cross when it is fully covered.

     * dvt73740 - Added a new vsim switch to avoid the coverage collection
       of the coverpoint implicitly defined in a cross. By default the
       coverage of implicit coverpoints are always collected per LRM.

-noimplicitcoverpoint   Avoid collecting coverage for implicit coverpoints.


     * dvt74258 - (results) The -uvmtestname and -ovmtestname options are
       added in vsim to use +UVM_TESTNAME and +OVM_TESTNAME names in
       coverstore testnames and data file names. Specified SV seed values
       are also added in coverstore test names and data file names by
       default.
     * [nodvtid] - New 'vcover parallelmerge' command has been added for
       UCDB and CoverStore database merge with distributed parallel
       processes.
       vcover parallelmerge [< options >]
       Options:
           -rmdb < path >                 : Specify user-defined RMDB file
           -runmode < local/rsh/lsf/sge > : Specify type of run mode (Default: l
ocal)
           -covmode < ucdb/covstore >     : Specify type of coverage database (D
efault: ucdb)
           -filelist < filepath >         : Specify file list name and path (Def
ault: $cwd/parallellist)
           -genlist                       : Generate file list from $cwd or $cwd
/CoverStore db location
           -genlistfrom < path_or_list >  : Generate file list from given db loc
ation(s)
           -ucdbname < pattern >          : Specify UCDB file pattern to search
(Default: *.ucdb)
           -outname < name >              : Specify merged output file name pref
ix (Default: merge)
           -teststatus < all/passed/failed >
                                          : Merge tests only with specified stat
us (Default: all)
           -mergetype < totals/testassociated/preservetestcounts >
                                          : Specify merge type (Default: totals)
           -mergeopts < options >         : Specify other merge options (Default
: "")
           -j < val >                     : Specify number of parallel merge job
s (Default: 10)
           -mtimeout < val >              : Specify merge timeout value (Default
: 10000)
           -hostlist < list_or_file >     : Specify list of hosts or file contai
ning host list (Default: "")
           -gridslots < val >             : Specify number of grid slots to use
(Default: 10)
           -gridopts < options >          : Specify grid options (Default: "")
           -qtimeout < val >              : Specify queue timeout value (Default
: 10000)
           -verbose                       : Print additional verbose information

     * dvt75139 - (results) Covered bins, missing bins, total bins, and "%
       Hit" are added in covergroup text report for covergroup TYPEs and
       covergroup instances. Those are also added for TYPE coverpoints and
       crosses in covergroups having merge_instances=0. The "% Hit" number
       is also added for all coverpoints and crosses.
     * [nodvtid] - vcover parallelmerge command now supports auto-rerun
       feature for failed parallel processes (due to either job submission
       or merge failure). Job submission failures are rerun by default.
       Merge failure rerun can be enabled with -mergererun option. Number
       of retries for both rerun types can be controlled with -maxrerun
       option.
-maxrerun < val >            : Specify maximum number of times job queue, timeou
ts
                               or merge failure processes are rerun automaticall
y. (Default: 10)
                               Specifying 0 will disable reruns for all failures
 types
-mergererun                  : Allow merge failure processes to rerun automatica
lly

     * [nodvtid] - vcover parallelmerge command allows user to override
       temporary directory path.
     -tempdir "< dir_path >"        : Specify temporary directory for intermedia
te output
                                      (Default: "$cwd/TEMP_MERGE_DIR")


     * dvt75218 - (results) Functional coverage items are now reported for
       each instance and DU in byinstance and bydu text reports
     * dvt78301 - vcover parallelmerge -ucdbname option is now replaced
       with -dbname option. New option will accept both UCDB and
       CoverStore test database files selection for the merge. Default
       -dbname value for UCDB and CoverStore is '*.ucdb' and '*'
       respectively.
     * dvt79256 - vcover ranktest now accepts merged coverstores as inputs
     * dvt78686 - Coverpoint and cross bin exclusions are now applied
       transitively to all the associated cross bins when -transitive
       option is specified in the coverage exclude command. This options
       must be used with the -cvgpath option in the "coverage exclude"
       command in order to apply the exclusion transitively to the crosses
       containing the excluded coverpoint bins.
     * dvt76485 - (results) In coverage html reports, exclusion comments
       added by the users is added as a tooltip in the hit count cells.
       Also, a plus sign '+' is added in the cell to indicate that this
       cell has an exclusion comment.
     * dvt79285 - (results) In the coverage summary page in html coverage
       report, a new hyperlink named "List of Design Units included in
       report..." is added. When clicked,it will redirect the user to a
       new html page that has a table containing all the design units and
       the coverage percentages for all the available coverage types in
       the design. This table can be sorted by either the total coverage
       or any of the coverage types.
     * [nodvtid] - (source) vcover parallelmerge has following changes:
- Added new options: -32, -64, -log
- Added support for UGE & RTDA grid type
- Changed behavior of -outname option. parallelmerge will now create output file
 with exact given name. It will no longer append '.ucdb' in UCDB mode
- Added support to specify multiple directory paths to -genlistfrom in UCDB mode

     * [nodvtid] - (results) Following enhancements were added to vcover
       parallelmerge:
- Show correct memory with -stats=perf and total number of error/warning counts.
- Show runtime and memory consumed by each parallel merge process
- Show merge errors and warnings by default
- Deprecated -verbose=all mode
- Added -quiet and -verbose mode
- Show parallelmerge command in vcover -help
- Added extra check if merge process gets killed by grid
- Added version number in internally generated RMDB file. If user had copied RMD
B file and modified to support their grid, they will need to update their RMDB f
ile for these new enhancements.

     * [nodvtid] - (results) There have been changes to messaging and
       logging in the vcover utility and UCDB/UCIS libraries. Changes may
       also be seen in vsim. These changes are designed to align the
       vcover messaging with other Questa tools. The filename 'vcover.log'
       is no longer the default output -log filename for the vcover
       operations that take a -log option (merge and ranktest). New
       behavior in this case is that output defaults to stdout, and is
       echoed to any explicitly supplied log file. Many output messages
       have been added to the catalog and output text may change as a
       result. This is an ongoing project and further changes should be
       anticipated in this area.
     * dvt28804 - (results) The -checkinputs switch is added in vcover
       merge to skip and report corrupted UCDB input files.
     * [nodvtid] - The covergoups page in the coverage HTML report has
       been changed. The new page has many new features, for example
       sorting and searching. Also its layout has been enhanced to be more
       clear. The new page works on all major browsers. We recommend using
       at least the minimum version of the following browsers: IE 11.0,
       firefox 42.0 and Google Chrome 47.0.
     * dvt84624 - Added -reason option in coverage exclude command for
       specifying exclusion reasons.
     * dvt83212 - Introducing a new coverage HTML report. The new coverage
       HTML report doesn't have any changes in its look and feel or its
       contents, but it has many performance enhancements. The new report
       should has; smaller generation time, smaller number of files and
       smaller disk usage.
   _______________________________________________________________________

   Verification Management Enhancements in 10.5
     * dvt72460 - The status summary for the VRM text, TCL, and HTML
       status reports now includes a summary of pending, running, and
       suspended tests.
     * [nodvtid] - The "ask" attribute in the parameter element in the
       RMDB file (VRM) now supports "\n" and "\t" meta-characters.
     * dvt71739 - The parallel-merge RMDB (for use with VRM) has been
       updated to support coverstores, to accept additional grid
       submission options, and to simplify the messages emitted while
       running.
     * dvt73167 - The "-nosummary" option for vrun (VRM) now suppresses
       the summary at the end of a regression run.
     * [nodvtid] - Added GetNextToken utility procedure to VRM. This
       procedure takes a list of tokens from an RMDB parameter and returns
       tokens from the list one at a time in round-robin sequence.
     * dvt75933 - Various improvements to the pro-active grid status check
       function.
          + Added CacheStatus and GetCachedStatus user-definable
            procedures for managing cached grid status data
          + Job status is only used if the grid status command is
            successful
          + Additional messages emitted when an Action fails because of
            the pro-active check
     * [nodvtid] - Added "role" attribute to Action script elements in
       RMDB. A role allows Action scripts of one type to behave line
       Action scripts of a different type with respect to named queue
       selection, timeout computation, and automatic local re-run. Added
       "-showtimeouts" command-line option to display computed timeouts.
     * dvt75977 - Merge Actions (mergeScript) in VRM are now re-run as-is
       upon failure. Added "mergeRerun" utility procedure and
       "-nomergererun" command-line option to control re-run behavior.
     * dvt76258 - (results) The ranktest summary has been augmented to
       include the number of contributing and non-contributing tests.
     * dvt66540 - There is a new optional command line option to ranktest
       which may be used to set the maximum number of parallel process: [
       -j < number_of_parallel_processes > ]
     * [nodvtid] - Added a new "-noucdb" command-line option to vrun (VRM)
       to avoid unnecessary UCDB file reading.
     * [nodvtid] - Fixed bug in VRM (GUI only) where the target of an
       "-include" command-line is a repeating Runnable.
     * [nodvtid] - Added "-mseed" command-line option to vrun (VRM) to
       seed internal random number generator.
     * [nodvtid] - Modified GetFileContents utility procedure (VRM) to
       ignore escaped newline characters.
     * dvt76492 - Added support in VRM for automated testlist expansion
       using a common testlist format:
          + The "testlist" attribute is now recognized on "runnable"
            elements.
          + Added new utility procedures GetMostRecentFile and
            GetMostRecentFileContents.
          + Added new utility procedures ExpandTestlist and
            GetTestlistTokens.
     * [nodvtid] - By default, the GetNextIteration user-definable
       procedure in VRM will return compound tokens when foreach tokens
       include characters other than the leading asterisk (ie: test1-1,
       test1-2, etc when the foreach token is "*1"). This is to prevent
       the inadvertent generation of duplicate tokens.
     * [nodvtid] - (source) In VRM, the "testname" parameter is recognized
       for group Runnables. That means a mergeScript or triageScript
       Action now inherits the testname under which it runs and the
       preScript and postScript of a group Runnable which defines a
       non-blank "testname" parameter are considered part of the same
       test. The "testname" parameter should only be defined in task
       Runnables if the intention is to flag only the leaf-level
       execScript Actions as tests.
     * dvt78588 - In VRM, when the "-noautomergedelete" command-line
       option is specified, the testplan, if any, is deleted from any
       merged UCDB files to which tests from that regression run are
       merged. A new "-notplandelete" command-line option prevents the
       testplan from being deleted. For now, the testplan deletion is
       ignored with a warning when the merged UCDB is a coverstore.
     * dvt76500 - VRM named queues maxrunning attribute is now considered
       a limit on the number of concurrently running jobs. Consequently, a
       multi-action fixed-list clubbed group, enabled by maxclubbing, is
       considered a single job; if maxrunning and maxclubbing are set to m
       and n respectively, then the named queue can be running a maximum
       of m jobs each containing n actions
     * dvt76500 - VRM multi-action jobs, fixed-list (maxclubbing) and
       array jobs (maxarray), combine an unlimited number of actions when
       their controlling attributes are set to 0.
     * dvt77656 - (results) Formal items linked with testplans by rules
       are now displayed in Tracker window like regular objects using
       their own icon.
     * dvt78842 - (results) The tplanref and tplansection attribute names
       are now supported for tests to link with specified testplan
       sections. The tplanref attribute is for specifying target testplan
       section's reference number, and the tplansection attribute is for
       specifying the full hierarchical path of the target testplan
       section.
     * dvt78894 - (results) The tplansection is now supported as an
       attribute name in HDL source code for specifying testplan scope
       hierarchy paths to link with. It also works when used within
       option.comment and type_option.comment of covergroups, coverpoints,
       and crosses.
     * [nodvtid] - The status counters in the VRM Cockpit and the VRM
       Results windows are now user-configurable. A new "vrmcounter"
       command allows the raw state values to be grouped into zero or more
       categories to be displayed in the window (as columns in the VRM
       Cockpit or in the status bar at the bottom of the VRM Results
       window).
     * [nodvtid] - Added a "test-only" view mode to the VRM Results
       window. All view modes are now mutually exclusive. The status
       counters at the bottom of the VRM Results window now follow current
       view mode of the window.
     * [nodvtid] - The status counters at the bottom of the VRM Results
       window now optionally follow the current filter expression of the
       window. A new menu option in the "View" menu and the window's
       context menu allows for the selection of whether the counters
       should show all tests (or Actions) or only those that meet the
       filter criteria.
     * [nodvtid] - A percent-of-total has been added to the status
       counters in the VRM Results window. The "total" is defined as the
       total number of Actions which are represented in the visible status
       counters.
     * [nodvtid] - The counter status columns in the VRM Cockpit now count
       only "tests" (execScript Actions with a non-blank testname
       attribute) if the "-testname" command-line option was specified
       when the VRM GUI was launched.
     * dvt72200 - VRM now provides a built-in TCL utility procedure that
       can generate one or more random tokens based on a master seed
       passed via the "-mseed" command-line option when vrun is launched.
     * [nodvtid] - A global master seed has been added to the VRM GUI. The
       seed may be set using the "-mseed" command-line option when the GUI
       is launched. If a master seed has not been set, one will be
       generated randomly. This master seed is used for all new VRM
       Configurations and for any manual regression runs launched during
       that GUI session. The master seed is saved with the VRM
       Configuration and may be changed with the VRM Configuration Edit
       dialog.
     * dvt75719 - (results) The AND, OR, and NOT operators are now
       supported in testplan rule expressions for constructing complex
       rules. The FORMAL_BOUNDED_PROOF rule alias is now added to link
       with testplans. It requires proof radius to be specified along with
       the formal object name.
     * [nodvtid] - Added "-historydb" command-line option to VRM to
       specify an alternate history database location. The default history
       database in VRMDATA/logs/db is still updated unless "-nohistory" is
       specified.
     * dvt65310 - Triage now supports a new command : triage passfail. The
       command extracts messages from the logfiles and the wlffile with
       the aid of the transform rules file. The commands exits with an
       exit code of 95 if any of the extracted messages matches the
       severity filter. The input files are assumed to be related to a
       single test. The extracted messages are optionally stored in a text
       file when using the -file filename option.
     * dvt65310 - Triage dbfile command now has the ability to insert
       already transformed messages into the triage database using the
       -msgsfile switch. Each message in the file is stored as key-value
       list. An obligatory key msg is necessary for a successful import of
       the message into the triage database.
     * dvt65310 - The transform engine rules file syntax was extended to
       enable detecting a missing expected message from a logfile/wlffile.
       This is achieved by an additional -nomatch attribute. The attribute
       takes as key-value list, compromising the message fields that
       should be emitted in case the transform rule never matched any of
       the input messages.
     * dvt79943 - (results) Setting mintimeout to 0 in VRM, will disable
       timeout monitoring for the corresponding action. The mintimeout
       value of 0 will take precedence over other global and local timeout
       values.
     * [nodvtid] - VRM now supports changing the value of selected
       parameters and/or attributes while the regression is running.
       Global and context specific parameters can be overridden. Also, the
       operational attributes of named queues can be changed: maxclubbing,
       maxarray, window, maxrunning. The syntax of the command for the
       functionality:
vrun -modify [-vrmdata <path>] [-dest <porthost>] [-eventlog <name>] [[<context>
/]<keyword>=<value> [...]]

     * [nodvtid] - Added GenerateStatusSummary utility procedure which
       returns formatted status summary during a regression run for use in
       emails and reports.
     * [nodvtid] - Added "-junit" command-line option to VRM which causes
       a JUnit results output file to be generated after a regression run.
       The file is generated by a TCL script available under
       vm_src/jenkins/vrm-to-junit.tcl.
     * [nodvtid] - Added SendEmailMessage utility procedure to VRM which
       facilitates the composition and sending of email messages from
       within a running regression.
     * dvt69384 - Wildcards are now supported in Link paths for formal
       alias rules to link with testplans.
     * dvt65329 - (results) In Excel/OO Add-In settings dialog, a new
       check box named 'Allow Add-In to Auto-Color testplans' is added.
       When checked, the Add-In toolbar buttons will color the testplan
       cells in the default alternating-column schema. Note that this
       option is checked by default.
     * [nodvtid] - The VRM RMDB API now supports a global search for
       parameters and their attributes regardless of the Runnable in which
       they are defined.
     * [nodvtid] - VRM now supports the sending of email, including an
       automated email at the end of a regression run.
     * [nodvtid] - Added "-nogridmsg" to vrun to disable messages when
       missing or failed grid jobs are re-queued by the pro-active grid
       checker.
     * dvt75566 - (results) Ranktest now provides a way to selectively
       group tests based on attribute values, such that ranktest will
       treat them as one combined object.
Four new switches are:
    -groupby [=< value >]  --  Specifies which attribute within the UCDB test re
cord to group tests by.
    -groupfilter < regex >  --  Specifies a regular expression match to apply to
 the attribute value being grouped, to match on a specific part of the attribute
 value itself.
    -norun -- Display groups without ranking. Allows you to visualize grouping.
    -recursive  -- Enables recursive ranking, items which make up a group, will
in turn be ranked against one another.

   NOTE: The output from ranktest has been altered from that of past releases (w
hen grouping as well as when not grouping).
   NOTE: The switches -concise and -verbose have been removed.

     * dvt80352 - (results) "vcover report ... < rankfile >" is a new
       feature."vcover report" never accepted rank files in the past. The
       four "show" options below are only valid when "vcover report ..."
       is given a rankfile.

        New arguments:
            -showucdb
            -showattr < attr[,< attr >]+
            -showincr
            -showbincounts

The following pre-existing options have a new/different behavior when
"vcover report ..." is given a rankfile:
      -precision < int >
      -assert
      -code [bcesf(t|x)]
      -codeAll
      -cvg
      -directive
The global arguments are supported:
      -suppress ...
      -error ...
      -note ...
      -warning ...
      -stats ...

Only the arguments listed above work with rankfile reporting.
None of the four rankfile reporting "show" arguments work with
generic coverage reporting.

     * dvt71530 - A new html report for the ranked results is now
       available. To generate this report, use the following command:
       vcover report -html -rank [other options] <.rank file> Other
       supported switches are:
       -attribute=+ Enables the display of any additional attribute
       (user-defined or tool-defined) stored in the UCDB. Multiple
       attributes can be separated by +.
       -attributeAll Enables display of all additional attributes stored
       in the UCDB.
       -details[=abcdefgpst] Enables display of individual coverage
       metrics.
       -htmldir Specifies the output HTML directory for the report.
       -nobins Disables reporting of bins for individual coverage types.
       -nographs Prevents generation of the pie and line chart at the top
       of the report in the summary section.
       -nononcontrib Prevents generation of list of non-contributing tests
       from appearing in report.
       -nosummary Prevents generation of initial summary section (this
       would be the graphs, the total coverage table will always be
       required). -precision Specifies how many numbers after the decimal
       point to display. -stats [=[+|-]... Controls display of statistics.
     * dvt75565 - (results) Functional coverage consolidated views are now
       added into the HTML report. To get these new pages, you have to
       click the hyperlink on Covergroups/Directives/Assertions in the
       Coverage by type table in the coverage summary page. Note that if
       the details of any of these types is filtered out using the
       -details option, its consolidated view page won't be generated.
   _______________________________________________________________________

   Power Aware Enhancements in 10.5
     * dvt73308 - Explicit usage of instance name in create_power_domain
       -elements will be given precedence over extents added because of
       wildcard expansion.
       Example:
       create_power_domain pd1 -elements {top*}
       create_power_domain pd2 -elements {top2}
       Here top1 will be extent of pd1, whereas top2 will be extent of
       pd2.
     * [nodvtid] - Added a vopt switch "-pa_staticchecksonly" to do only
       power aware static checking (no simulation) of the design.All other
       PA processing will not be done and hence it will give fast
       turnaround time for static checks.The earlier option '-pa_checks=s'
       still exists to run PA simulation along with static checks.
       This new switch can also be used in conjunction with -pa_checks=s
       to limit the type of static checks.
       e.g
       -pa_staticchecksonly -pa_checks=si would enable only isolation
       static checking.
       -pa_staticchecksonly -pa_checks=sl would enable only level shifter
       static checking.
     * [nodvtid] - Added the vopt option '-pa_enable=alwaysonbuf' to turn
       off corruption of buf primitives.
     * dvt75000 - UPF package function supply_on/supply_off can now be
       used from UVM package/functions and classes. The supply search
       protocol is: 1. Search for supply net/port in the scope of the
       calling function 2. Search in "-pa_top" scope 3. Search in module
       provided with -pa_powertop option
     * dvt77237 - Questa PASim now accepts a list of UPF file in vopt.
       List of UPF files can be specified with vopt option -pa_upflist .
       This option is mutually exclusive with -pa_upf option.
     * dvt76985 - Added the support for -supply and -domain options in
       add_power_state UPF command
     * [nodvtid] - Added support for custom resolution function of
       supply_nets.
       The use model is as follows :
       (1) User defines an SV resolution function with input type as an
       array of supply_net_type :
       function supply_net_type resolution_func(supply_net_type bus[]);
       (2) User refer to this resolution function in UPF create_supply_net
       command with fully qualified name :
       create_supply_net N1 -resolve sv_package::resolution_function
     * [nodvtid] - (results) option -pa_enable=libretcell behaviour is
       made default TRUE. for retentions cells tool used to do driver
       based corruption and now it be do liberty based corruption.
     * dvt75163 - UPF 2.1 power model support added. Support for upf 2.1
       commands begin_power_model, end_power_model and apply_power_model
       added.
     * dvt80233 - (source, results) A new VOPT checks-controllability
       option is added that shall enable/disable specified dynamic PA
       check based on the control-signal-expression value. Option:
       [-chksctrl_expr {ctrl-signal-expression}] Sample tcl commands to
       achieve ctrl-signal-expression based controllability: pa_checks
       -checkIds { rpo rop} -chksctrl_expr {/tb/retpwr && /tb/rtc} This
       option is applicable for 'rpo' and 'rop' checks currently.
     * dvt81110 - Support for UPF 2.1 command connect_logic_net -reconnect
       has been added. This command option "-reconnect" is also enabled in
       UPF 2.0 mode under vopt option -pa_upfextensions=relaxedsyntax
     * dvt80052 - (results) Added static check for "redundant", "missing"
       and "valid" retention cell.
     * dvt80521 - (results) Isolation/Level-shifter strategies with
       location parent are now ignored for open output ports.
     * dvt82076 - (results) There is change in behavior in
       CORRUPT_ON_ACTIVITY/CORRUPT_STATE_ON_ACTIVITY simstates for flops.
       Now, the flop outputs would not corrupt if there is a change in
       input('D') in COA/CSOA simstate. Use the vopt option
       -pa_enable=coainputcrpt to achieve flop corruption with change in
       'D'.
     * [nodvtid] - (results) There is a change in behavior of vopt option
       "-pa_upfsyntaxchecks". Earlier using this option with vopt would
       only do syntax checking of the UPF and exit.Now using this option
       with design top would do syntax checking of the UPF file and if
       successful will invoke actual PA UPF elaboration. If user doesn't
       specify any design top with this option then tool will only do
       syntax checking of UPF and exit(same as old behavior).
     * dvt83155 - (results) Added support for liberty based corruption for
       all liberty cells under pa option 'libertycellcrpt'
       (-pa_enable=libertycellcrpt)



#Mentor Graphics Search Data
#meta="doc.type.documentation.rn,product.version.10.5,product.id.P11633"

