                     Release Notes For Questa Sim 10.7f

                                 Mar 23 2020
               Copyright 1991-2020 Mentor Graphics Corporation
                            All rights reserved.
      This document contains information that is proprietary to Mentor
                                  Graphics
   Corporation. The original recipient of this document may duplicate this
      document in whole or in part for internal business purposes only,
                                  provided
   that this entire notice appears in all copies. In duplicating any part
                                     of
    this document the recipient agrees to make every reasonable effort to
      prevent the unauthorized use and distribution of the proprietary
                                information.
     TRADEMARKS: The trademarks, logos and service marks ("Marks") used
                                   herein
   are the property of Mentor Graphics Corporation or other third parties.
      No one is permitted to use these Marks without the prior written
                                   consent
   of Mentor Graphics or the respective third-party owner. The use herein
   of a third-party Mark is not an attempt to indicate Mentor Graphics as
                                      a
     source of a product, but is intended to indicate a product from, or
   associated with, a particular third party. The following are trademarks
                                     of
    of Mentor Graphics Corporation: Questa, ModelSim, JobSpy, and Signal
                                    Spy.
        A current list of Mentor Graphics trademarks may be viewed at
               www.mentor.com/terms_conditions/trademarks.cfm.
      End-User License Agreement: You can print a copy of the End-User
                                   License
        Agreement from: www.mentor.com/terms_conditions/enduser.cfm.
   _______________________________________________________________________

     * How to Get Support
       For information on how to obtain technical support, visit the
       support page at
       [1]http://supportnet.mentor.com
   _______________________________________________________________________

  Index to Release Notes

     * [2]Key Information
     * [3]Release Announcements in 10.7f
     * [4]Base Product Specifications in 10.7f
     * [5]Compatibility Issues with Release 10.7f
     * [6]User Interface Defects Repaired in 10.7f
     * [7]SystemVerilog Defects Repaired in 10.7f
     * [8]VHDL Defects Repaired in 10.7f
     * [9]SystemC Defects Repaired in 10.7f
     * [10]Verification Management Defects Repaired in 10.7f
     * [11]SystemVerilog Enhancements in 10.7f
     * [12]Document Revision History in 10.7f
   _______________________________________________________________________

   Key Information
     * QSIM-140 - (results) The compiler +protect flow is in process of
       deprecation. This affects the vlog and vcom compilers. The
       recommended flow is to use vencrypt (Verilog/SV) or vhencrypt
       (VHDL) followed by vlog or vcom compilation. The deprecation
       process starts with a warning if this option is used, which will
       become an error in later releases. The reason for this change is to
       remove the source ambiguities referenced by the compilation
       libraries. An encrypted compilation is a compilation of the
       post-encryption sources and must not retain any association with
       pre-encryption sources. This principle is reinforced by maintaining
       a two-step flow.
     * (results) -novopt flow has been deprecated and commands will flag
       below error now.
** Error (suppressible): (vlog-12110) All optimizations are disabled because the
 -novopt option is in effect.
 This will cause your simulation to run very slowly. If you are using this switc
h to preserve visibility for
 Debug or PLI features, please see the User's Manual section on Preserving Objec
t Visibility with vopt. -novopt
 option is now deprecated and will be removed in future releases.

       Using -novopt with optimized design in vsim will also flag below
       error.
** Error (suppressible): (vsim-12110) -novopt option has no effect when used wit
h the optimized design.
-novopt option is now deprecated and will be removed in future releases.

       In 10.7 release, user can suppress this error. But, it is
       recommended to remove any dependency on -novopt flow from user's
       design environment. Future releases will remove -novopt flow
       completely.
     * This release uses new licensing version which needs to have license
       servers upgraded to FLEXnet v11.14.1.3.
       For floating licenses, it will be necessary to verify that the
       vendor daemon (i.e., mgcld) and the license server (i.e., lmgrd)
       have FLEXnet versions equal to or greater than 11.14.1.3. If the
       current FLEXnet version of your vendor daemon and lmgrd are less
       than 11.14.1.3 then it will be necessary to stop your license
       server and restart it using the vendor daemon and lmgrd contained
       in this release.
       If you use node locked licenses you don't need to do anything. This
       release will update licensing to MSL v2017_1_patch2 with MGLS
       v9.17_10.2.4 and PCLS v9.17.10.2.0
       In summary, this release uses the following license versions:
          + FLEXnet v11.14.1.3
          + MSL v2017_1_patch2
          + MGLS v9.17_10.2.4
          + PCLS v9.17.10.2.0
     * The 10.7g update release will be the last release in the 10.7
       series.
   _______________________________________________________________________

   Release Announcements in 10.7f
     * Due to enhanced security restrictions with web browser PDF
       plug-ins, some links do not function. Links in HTML documentation
       are fully functional.
       Clicking a link within a PDF viewed in a web browser may result in
       no action, or it may load the title page of the current PDF manual
       (instead of the intended target in the PDF manual). The unresolved
       link behavior occurs in all web browsers on Windows and Linux
       platforms. Because of this behavior, the navigational experience of
       PDF manuals is compromised. PDF is ideal for printing because of
       its page-oriented layout.
       Use the HTML manuals to search for topics, navigate between topics,
       and click links to examples, videos, reference material, and other
       related technical content.
       For information about Adobe's discontinued support of Adobe Reader
       on Linux platforms and your available options, refer to Knowledge
       Article MG596568 on SupportNet.
       Linux is a registered trademark of Linus Torvalds in the U.S. and
       other countries.
     * We regularly review our OS/Platform support for Questa/ModelSim and
       related functional verification products to add new platforms and
       discontinue old ones.
       That process normally takes a number of years from decision to
       action. Customer notifications are typically only one year in an
       advance through our Release Notes and Install Guide.
       We plan to make a change in our Windows support, 1 year from now.
       We began notifications of this change back in January 2017 with the
       10.5d and 10.6a releases
       As our existing Windows machines breakdown or are discontinued,
       replacement hardware can only support Windows 10. So say Microsoft
       and our hardware vendors, HP & Lenovo. That will limit our capacity
       and ability to support Windows 7 & 8.1 in the future.
       Therefore, starting with 10.8 (FCS Dec 2018) we plan to discontinue
       supporting Windows 7 & 8.1 Thus the only Windows version for 10.8
       will be for Windows 10. However we will continue to support Windows
       7 & 8.1 with our 10.6 and 10.7 release series until their planned
       EOL (10.6 EOL - mid 2019, 10.7 EOL - mid 2020) to coincide with
       Microsoft's EOL for Windows 7.
   _______________________________________________________________________

   Base Product Specifications in 10.7f
     *
       [Supported Platforms]
       Linux RHEL 6 x86/x86-64
       Linux RHEL 7 x86/x86-64
       Linux SLES 11 x86/x86-64
       Linux SLES 12 x86/x86-64
       Windows 7 x86/x64
       Windows 8.1 x86/x64
       Windows 10 x86/x64
       [Supported GCC Compilers (for SystemC)]
       gcc-5.3.0-linux/gcc-5.3.0-linux_x86_64
       gcc-4.7.4-linux/gcc-4.7.4-linux_x86_64
       gcc-4.5.0-linux/gcc-4.5.0-linux_x86_64
       gcc-4.2.1-mingw32vc12
       [OVL (shipped with product)]
       v2.8.1
       [VHDL OSVVM (shipped with product)]
       v2014.07
       [Licensing]
       FLEXnet v11.14.1.3
       MSL v2017_1_patch2
       MGLS v9.17_10.2.4
       PCLS v9.17.10.2.0
   _______________________________________________________________________

   Compatibility Issues with Release 10.7f

   Key Information Compatibility
     * QSIM-140 - (results) The compiler +protect flow is in process of
       deprecation. This affects the vlog and vcom compilers. The
       recommended flow is to use vencrypt (Verilog/SV) or vhencrypt
       (VHDL) followed by vlog or vcom compilation. The deprecation
       process starts with a warning if this option is used, which will
       become an error in later releases. The reason for this change is to
       remove the source ambiguities referenced by the compilation
       libraries. An encrypted compilation is a compilation of the
       post-encryption sources and must not retain any association with
       pre-encryption sources. This principle is reinforced by maintaining
       a two-step flow.
     * [nodvtid] - (results) -novopt flow has been deprecated and commands
       will flag below error now.
** Error (suppressible): (vlog-12110) All optimizations are disabled because the
 -novopt option is in effect.
 This will cause your simulation to run very slowly. If you are using this switc
h to preserve visibility for
 Debug or PLI features, please see the User's Manual section on Preserving Objec
t Visibility with vopt. -novopt
 option is now deprecated and will be removed in future releases.

       Using -novopt with optimized design in vsim will also flag below
       error.
** Error (suppressible): (vsim-12110) -novopt option has no effect when used wit
h the optimized design.
-novopt option is now deprecated and will be removed in future releases.

       In 10.7 release, user can suppress this error. But, it is
       recommended to remove any dependency on -novopt flow from user's
       design environment. Future releases will remove -novopt flow
       completely.

   SystemVerilog Compatibility
     * QSIM-55788 - (results) Module instances under for-generate blocks
       are not initialized with same initialization seed, which can result
       in non-LRM compliant simulation behavior. A SystemVerilog
       constrained-random language extension "genmodseedfix" has been
       implemented to address this issue. To enable LRM-compliant seeding
       of module instances under for-generate blocks, add
       "-svrandext=+genmodseedfix" to the vsim command line. This
       extension is disabled by default.
     * QSIM-59880 - (results) In some cases, randomize() would incorrectly
       evaluate a 'soft' constraint containing an indexed expression with
       a random index. This issue has been fixed.
     * QSIM-59050 - (results) In some rare cases, randomize() calls
       involving constraints with function calls (having one or more
       arguments) would be incorrectly evaluated (sometimes resulting in
       spurious constraint contradiction failures). This issue has been
       resolved.
     * QSIM-58384 - (results) Significantly improved performance and
       reduced memory usage related to evaluation of randomize() calls
       involving large numbers of 'inside' constraint expressions.
     * QSIM-61434 - (results) In some rare cases, a call to randomize()
       would fail (return 0) for a scenario that had valid solution(s).
       This issue has been fixed.
     * QSIM-60784 - (results) In some rare cases, randomize() would fail
       (return 0) for a scenario with valid solution(s) involving
       constraints with random index expressions. This issue has been
       fixed.
     * QSIM-60944 - (results) In some rare cases, randomize() would fail
       (return 0) for a scenario having valid solution(s) involving 'dist'
       constraints where the bit-width of the LHS is less than the
       bit-width of the RHS. This issue has been fixed.
     * QSIM-62161 - (results) In some rare cases, randomize() would
       incorrectly evaluate a constraint involving a dist/inside/unique
       construct with an indexed multi-dimensional array (where the index
       is random) on the RHS. This issue has been fixed.
     * QSIM-60546 - (results) RNG Trace (Random Number Generator Trace)
       feature: Process names now reflect the value of their initial seed
       -- this method of identifying processes has been found to be more
       random-stable than the previous method (which displayed process
       names the same way as the GUI). Use "-rngtraceopt=guiprocessnames"
       to instruct RNG Trace to generate process names the old way.
     * QSIM-61128 - (results) RNG Trace (Random Number Generator Trace)
       feature: Implemented automatic filtering of "noisy" RNG trace
       output preceding set_randstate() operations.
       Output being written to a RNG trace file is buffered. When a
       set_randstate operation (on the executing process) is encountered,
       a backward scan of the buffered operation is made - looking for the
       first operation where the input (prior) randstate matches the
       randstate of the set_randstate operation. If such a operation is
       found, the matching operation along with the reset operation and
       intervening operations are filtered (removed from the buffer). Only
       RNG operations executed from the active process are considered.
       When the RNG trace is being written to the transcript (rather than
       to a file), the buffering/filtering will not be performed. This is
       because the filtering would delay the reporting of RNG operation
       (within the transcript) and make the reporting confusing.
       The length of the buffer can be controlled by the
       "-rngtracebuffersize <size>" command line option. Setting a size
       less than 2 disables the filtering. The default is 20.
     * QSIM-60157 - (results) Improved the output of the constraint
       contradiction report generated when randomize() fails and
       -solvefaildebug is enabled. The output of the "Where" section
       (which describes variables and expressions that are assigned to a
       constant value) is now annotated with a comment indicating if a
       variable is considered "random" or "non-random" at the time
       randomize() is invoked. This information can be useful when
       debugging unexpected randomize() failures due to testbench errors
       related to missing 'rand' keywords on class fields that should be
       declared random.
     * QSIM-60165 - (results) The output of the -solvefaildebug constraint
       contradiction report has been improved when outputting information
       about variables/constraints involving packed structs. In the past,
       individual fields of packed structs were displayed as part-selects
       by the constraint contradiction report. The report now displays
       these as field names (where possible) improving the readability of
       the report.

   VHDL Compatibility
     * QSIM-56691 - (source, results) Following execution of
       uninstantiated procedures with OUT mode parameters not associated
       with a type generic, and evaluation of generic procedures with OUT
       mode parameters not associated with a type generic, actual
       variables associated with the OUT parameters could be left
       unchanged despite changes within the procedures. The compiler is
       now generating code to correctly set the value of OUT mode
       parameters in the above cases.
     * QSIM-56234 - (results) In certain cases, association of array
       subelements in ports was leading to incorrect results. This has
       been fixed.
     * QSIM-58539 - (results) The attributes INSTANCE_NAME and PATH_NAME,
       were not considered globally static. If the prefix of the attribute
       is a signal and this expression appears in a wait statement with an
       on clause or in a concurrent statement other than a process, a
       change in signal value would trigger a evaluation of the wait or
       concurrent statement. This currently results in extra statement
       executions. The attributes are now considered globally static, so
       the wait or concurrent statement is no longer sensitized to that
       prefix. This change can cause simulation results to be different
       from previous versions.
     * QSIM-57969 - (results) Using a function call without arguments in a
       generic map was showing syntax error incorrectly. This has been
       fixed.
   _______________________________________________________________________

   User Interface Defects Repaired in 10.7f
     * QSIM-60864 - Corrected and extended handling of ANSI escape codes
       in the Questa GUI transcript window. More colors are supported, but
       not the full ANSI range. Also Bold is supported.
   _______________________________________________________________________

   SystemVerilog Defects Repaired in 10.7f
     * QSIM-58023 - Using a wire type with a struct containing a field of
       an enum type could generate an error like<br>
       <code># ** Fatal: (vsim-3355) Variable 'struct1.enum1' cannot be
       converted to a net.</code>
     * [nodvtid] - SystemVerilog macros undefining and subsequently
       redefining a macro of the same name repeatedly during macro
       expansion would generate incorrect results.
     * QSIM-55788 - (results) Module instances under for-generate blocks
       are not initialized with same initialization seed, which can result
       in non-LRM compliant simulation behavior. A SystemVerilog
       constrained-random language extension "genmodseedfix" has been
       implemented to address this issue. To enable LRM-compliant seeding
       of module instances under for-generate blocks, add
       "-svrandext=+genmodseedfix" to the vsim command line. This
       extension is disabled by default.
     * QSIM-60156 - In some rare cases, randomize() would return 0
       indicating no solutions for constraints involving signed modulo
       expressions. This issue has been fixed.
     * QSIM-59957 - In some rare cases, randomize() calls involving an
       array.sum() constraint with a 'with' clause within the context of
       an iterative constraint would trigger an internal error. This issue
       has been fixed.
     * QSIM-59880 - (results) In some cases, randomize() would incorrectly
       evaluate a 'soft' constraint containing an indexed expression with
       a random index. This issue has been fixed.
     * QSIM-59116 - Significantly improved performance of randomize()
       calls involving large numbers of 'randc' variables.
     * QSIM-59051 - In some rare cases, randomize() calls involving
       constraints with function calls (having one or more arguments)
       would trigger an internal error. This issue has been resolved.
     * QSIM-59050 - (results) In some rare cases, randomize() calls
       involving constraints with function calls (having one or more
       arguments) would be incorrectly evaluated (sometimes resulting in
       spurious constraint contradiction failures). This issue has been
       resolved.
     * QSIM-58871 - In some rare cases, randomize() would cause the
       simulator to crash when evaluating constraints involving a
       non-random multi-dimensional packed array. This issue has been
       fixed.
     * QSIM-58384 - (results) Significantly improved performance and
       reduced memory usage related to evaluation of randomize() calls
       involving large numbers of 'inside' constraint expressions.
     * QSIM-58334 - Attempting to randomize() a protected (encrypted)
       class containing a static random variable would cause a crash or
       trigger an error (vsim-7180). This issue has been resolved, and
       randomize() calls on protected classes w/ static random variables
       are now supported.
     * QSIM-59820 - In some rare cases, randomize() calls involving
       constraints having function calls will spuriously fail with the
       error: "(vsim-7090) Invalid X or Z in a state expression value
       within a constraint." This issue has been fixed.
     * QSIM-60117 - In some rare cases, randomize() calls referring to one
       or more 'soft dist' constraints would cause a spurious failure (no
       solutions). This issue has been fixed.
     * QSIM-61434 - (results) In some rare cases, a call to randomize()
       would fail (return 0) for a scenario that had valid solution(s).
       This issue has been fixed.
     * QSIM-60947 - In some rare cases, randomize() would trigger an
       internal error when evaluating a scenario involving constraints
       with random index expressions. This issue has been fixed.
     * QSIM-61459 - In some rare cases, randomize() would trigger an
       internal error for scenarios involving constraints with function
       call expressions. This issue has been fixed.
     * QSIM-57529 - Compiling a constraint involving a non-random
       real-type expression that is cast to an integral type would trigger
       spurious warning messages about possibly requiring the 'svrnm'
       (SystemVerilog Real Number Modeling) license during simulation.
       This issue has been fixed.
     * QSIM-61486 - Constraints involving array.sum() reduction
       expressions for multi-dimensional arrays would trigger an internal
       error during randomize() when "-svext=ared" was enabled. This issue
       has been fixed.
     * QSIM-61320 - In some rare cases, randomize() would crash when
       evaluating constraints involving function calls. This issue has
       been fixed.
     * QSIM-61367 - In some rare cases, randomize() would crash when
       evaluating inline constraints w/ references to non-random packed
       struct. This issue has been fixed.
     * QSIM-60784 - (results) In some rare cases, randomize() would fail
       (return 0) for a scenario with valid solution(s) involving
       constraints with random index expressions. This issue has been
       fixed.
     * QSIM-60944 - (results) In some rare cases, randomize() would fail
       (return 0) for a scenario having valid solution(s) involving 'dist'
       constraints where the bit-width of the LHS is less than the
       bit-width of the RHS. This issue has been fixed.
     * QSIM-60424 - Fixed a memory leak in randomize() that significantly
       impacted simulation memory usage for testcases involving large
       numbers of randomize() calls.
     * QSIM-60640 - In some cases, randomize() would crash when evaluating
       a 'dist' constraint that specified a constant array on the RHS.
       This issue has been fixed.
     * QSIM-62161 - (results) In some rare cases, randomize() would
       incorrectly evaluate a constraint involving a dist/inside/unique
       construct with an indexed multi-dimensional array (where the index
       is random) on the RHS. This issue has been fixed.
     * QSIM-62382 - In some rare cases, randomize() would trigger a
       spurious error (vsim-7066: Index out of bounds) when evaluating
       constraints involving indexed arrays. This issue has been fixed.
     * QSIM-62312 - In some rare cases, randomize() would cause vsim to
       crash when evaluating a constraint involving an associative array
       with a random index. This issue has been fixed.
     * QSIM-62937 - Fixed vopt crash when optimizing top level testbench
   _______________________________________________________________________

   VHDL Defects Repaired in 10.7f
     * QSIM-56691 - (source, results) Following execution of
       uninstantiated procedures with OUT mode parameters not associated
       with a type generic, and evaluation of generic procedures with OUT
       mode parameters not associated with a type generic, actual
       variables associated with the OUT parameters could be left
       unchanged despite changes within the procedures. The compiler is
       now generating code to correctly set the value of OUT mode
       parameters in the above cases.
     * QSIM-56234 - (results) In certain cases, association of array
       subelements in ports was leading to incorrect results. This has
       been fixed.
     * QSIM-57546 - If a package contains a package instance within a USE
       clause, static array constraints within the package instance may
       not be compiled correctly, possible causing a fatal internal error
       during elaboration of the design by the simulator.
     * QSIM-57795 - The compiler could report a fatal internal error if it
       encountered a generic declaration list with an index constraint
       within a generic vector preceding an interface package.
     * QSIM-58539 - (results) The attributes INSTANCE_NAME and PATH_NAME,
       were not considered globally static. If the prefix of the attribute
       is a signal and this expression appears in a wait statement with an
       on clause or in a concurrent statement other than a process, a
       change in signal value would trigger a evaluation of the wait or
       concurrent statement. This currently results in extra statement
       executions. The attributes are now considered globally static, so
       the wait or concurrent statement is no longer sensitized to that
       prefix. This change can cause simulation results to be different
       from previous versions.
     * QSIM-57830 - Using unconstrained alias signal as an actual for a
       port connection was leading to a crash. This has been fixed.
     * QSIM-57969 - (results) Using a function call without arguments in a
       generic map was showing syntax error incorrectly. This has been
       fixed.
     * QSIM-60023 - Use of the -mixedsvvh switch could result in the
       compiler erroneously emitting error vcom-1995, which states that a
       package cannot be imported into SystemVerilog designs. This can
       occur when at least two VHDL packages are compiled on a single
       command-line with the -mixedsvvh switch; and, one package contains
       a constant declaration initialized by a function defined in the
       other package, and the name of the first package comes lexically
       before the name of the second package.
     * QSIM-57712 - If an entity has a generic whose type depends on a
       previously declared generic and that entity is directly
       instantiated, then vsim could crash when loading the design. The
       work around was to use a component instantiation.
     * QSIM-60125 - Simulations can crash, producing a stacktrace, when
       simulating a VHDL design that calls procedures defined inside an
       uninstantiated package with signal-valued attribute expressions,
       using the 'TRANSACTION, 'STABLE, and 'QUIET attributes.
     * QSIM-56236 - Several related problems are fixed
         1. Ports that are of a multi-dimensional array type and the index
            constraints depend on generics would crash.
         2. Partially constrained ports that are arrays of arrays would
            crash
         3. Generic of type array whose constraints depend on other
            generics would crash.
       All these issues have been resolved.
     * QSIM-59785 - The compiler could generate incorrect code for the
       mapping of a signal to a component port when the port is an array
       of records containing unconstrained array fields, and the component
       instantiation is within a generate block. Incorrect code generation
       could result in invalid error messages emitted from the compiler,
       the optimizer, or simulator, or could cause the simulator to crash.
   _______________________________________________________________________

   SystemC Defects Repaired in 10.7f
     * QSIM-57389 - Fixed sccom-6000 error caused by a corrupt debug
       database generated by scparse in cases where member functions had
       many arguments.
   _______________________________________________________________________

   Verification Management Defects Repaired in 10.7f
     * VM-11371 - Fixed performance issue where VRM GUI would appear to
       stop responding to input for a significant time when opening a VRM
       Results pane on a regression which contains a large number (ie:
       1000s) of scripts and/or tests.
     * VM-8461 - Fixed bug in VRM testlist expansion where multiple test
       lines with same test name were not being clubbed into a single
       block of runnable instances.
     * QSIMQA-3564 - Fixed bug in VRM status command (vrun -status) where
       merged coverage could be incorrect depending on how tests are
       grouped for auto-merge
     * VM-11626 - Fixed bug in VRM where test could hang with no timeout
       if VRM cannot read the UCDB generated by the test
   _______________________________________________________________________

   SystemVerilog Enhancements in 10.7f
     * [nodvtid] - SystemVerilog macro names defined on the command line
       may contain the minus ('-') character in addition to the set of
       characters that form valid identifiers. Enable this extension with
       the "-svext=+mncim" option.
     * QSIM-58007 - When -solveverbose or -solveinfo is specified on the
       vsim command line, the solver will dump information about the
       constraints which participate in a given randomize() call. In some
       cases, constraints which contain references to non-random variables
       would display the names of the variables and not the value of those
       variables, making it difficult to debug issues related to those
       constraints. The -solveverbose/-solveinfo output for these kinds of
       constraints has been improved -- now the value of non-random
       variables and the names of those variables (as an in-line comment)
       are displayed.
     * QSIM-58407 - Implemented a new feature "RNG Trace" that produces
       diagnostic output during simulation to assist in the analysis of
       random-stability issues between two differing simulations. Enable
       RNG tracing by adding "-rngtrace" to the vsim command line. For
       additional details and options, refer to the Questa SIM Command
       Reference Manual (options "-rngtrace", "-rngtraceopt",
       "-rngtraceclassfilter", "-rngtraceprocessfilter") and the
       "Simulator State Variables" Section of the Questa SIM User's Manual
       (variables "RNGTrace", "RNGTraceFile", "RNGTraceOpt",
       "RNGTraceClassFilter", "RNGTraceProcessFilter")
     * QSIM-59275 - Given a randomize() scenario with no solutions, when
       -solvefaildebug is enabled, a constraint contradiction report is
       generated representing the minimum-set of contradictory
       constraints. If a timeout occurred during the determination of the
       minimum-set, the error message "(vsim-7175) randomize() failed due
       to a non-reproducible constraint conflict." was displayed. This
       error message was found to be confusing and has been improved. The
       new error message that is displayed when a timeout occurs during
       -solvefaildebug minimum-set generation is: "(vsim-7097) Timeout
       while testing for -solvefaildebug constraint conflicts
       (SolveFailDebugTimeout=50)."
     * QSIM-59852 - Given a randomize() scenario with no solutions, when
       -solvefaildebug is enabled, a constraint contradiction report is
       generated representing the minimum-set of contradictory
       constraints. If a timeout occurred during the determination of the
       minimum-set, an error message was displayed and no constraint
       contradiction report (or testcase when -solvefailtestcase is
       specified) would be generated. This behavior has changed -- if a
       timeout now occurs during -solvefaildebug minimum-set generation,
       then a partial constraint contradiction report (and partial
       testcase) will be generated. The partial results may provide enough
       information to assist in debugging the constraint contradiction.
     * QSIM-60546 - (results) RNG Trace (Random Number Generator Trace)
       feature: Process names now reflect the value of their initial seed
       -- this method of identifying processes has been found to be more
       random-stable than the previous method (which displayed process
       names the same way as the GUI). Use "-rngtraceopt=guiprocessnames"
       to instruct RNG Trace to generate process names the old way.
     * QSIM-61128 - (results) RNG Trace (Random Number Generator Trace)
       feature: Implemented automatic filtering of "noisy" RNG trace
       output preceding set_randstate() operations.
       Output being written to a RNG trace file is buffered. When a
       set_randstate operation (on the executing process) is encountered,
       a backward scan of the buffered operation is made - looking for the
       first operation where the input (prior) randstate matches the
       randstate of the set_randstate operation. If such a operation is
       found, the matching operation along with the reset operation and
       intervening operations are filtered (removed from the buffer). Only
       RNG operations executed from the active process are considered.
       When the RNG trace is being written to the transcript (rather than
       to a file), the buffering/filtering will not be performed. This is
       because the filtering would delay the reporting of RNG operation
       (within the transcript) and make the reporting confusing.
       The length of the buffer can be controlled by the
       "-rngtracebuffersize <size>" command line option. Setting a size
       less than 2 disables the filtering. The default is 20.
     * QSIM-60157 - (results) Improved the output of the constraint
       contradiction report generated when randomize() fails and
       -solvefaildebug is enabled. The output of the "Where" section
       (which describes variables and expressions that are assigned to a
       constant value) is now annotated with a comment indicating if a
       variable is considered "random" or "non-random" at the time
       randomize() is invoked. This information can be useful when
       debugging unexpected randomize() failures due to testbench errors
       related to missing 'rand' keywords on class fields that should be
       declared random.
     * QSIM-62297 - In the past, randomize() calls involving a constraint
       having a function call with a non-random unpacked array argument
       would elicit an error at compile time. The restriction on unpacked
       arrays as arguments to a function calls in a constraints has been
       eased -- these constructs are now allowed and evaluated.
     * QSIM-60165 - (results) The output of the -solvefaildebug constraint
       contradiction report has been improved when outputting information
       about variables/constraints involving packed structs. In the past,
       individual fields of packed structs were displayed as part-selects
       by the constraint contradiction report. The report now displays
       these as field names (where possible) improving the readability of
       the report.
   _______________________________________________________________________

   Document Revision History in 10.7f
     * Revision - Changes - Status/Date
          + 3.17 - Modifications to improve the readability and
            comprehension of the content. Approved by Tim Peeke. All
            technical enhancements, changes, and fixes are listed in this
            document for all products in this release. Approved by Bryan
            Ramirez. - Released/March 2020
          + 3.16 - Modifications to improve the readability and
            comprehension of the content. Approved by Tim Peeke. All
            technical enhancements, changes, and fixes are listed in this
            document for all products in this release. Approved by Bryan
            Ramirez. - Released/February 2020
          + 3.15 - Modifications to improve the readability and
            comprehension of the content. Approved by Tim Peeke. All
            technical enhancements, changes, and fixes are listed in this
            document for all products in this release. Approved by Bryan
            Ramirez. - Released/December 2019
     * Author: In-house procedures and working practices require multiple
       authors for documents. All associated authors for each topic within
       this document are tracked within the document source.
     * Revision History: Released documents maintain a revision history of
       up to four revisions. For earlier revision history, refer to
       earlier releases of documentation which are available on Support
       Center (http://support.mentor.com).
     * Revision - Changes - Status/Date
          + 3.17 - Modifications to improve the readability and
            comprehension of the content. Approved by Tim Peeke. All
            technical enhancements, changes, and fixes are listed in this
            document for all products in this release. Approved by Bryan
            Ramirez. - Released/March 2020
          + 3.16 - Modifications to improve the readability and
            comprehension of the content. Approved by Tim Peeke. All
            technical enhancements, changes, and fixes are listed in this
            document for all products in this release. Approved by Bryan
            Ramirez. - Released/February 2020
          + 3.15 - Modifications to improve the readability and
            comprehension of the content. Approved by Tim Peeke. All
            technical enhancements, changes, and fixes are listed in this
            document for all products in this release. Approved by Bryan
            Ramirez. - Released/December 2019
     * Author: In-house procedures and working practices require multiple
       authors for documents. All associated authors for each topic within
       this document are tracked within the document source.
     * Revision History: Released documents maintain a revision history of
       up to four revisions. For earlier revision history, refer to
       earlier releases of documentation which are available on Support
       Center (http://support.mentor.com).



#Mentor Graphics Search Data
#meta="doc.type.documentation.rn,product.version.10.7f,product.id.P11633"

