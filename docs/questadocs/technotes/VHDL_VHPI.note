                       Mentor Graphics Technical Note
			 Copyright 1991-2020 Mentor Graphics Corporation
						All Rights Reserved.

	This document contains information that is proprietary to 
	Mentor Graphics Corporation. The original recipient of this 
	document may duplicate this document in whole or in part for 
	internal business purposes only, provided that this entire 
	notice appears in all copies. In duplicating any part of this 
	document, the recipient agrees to make every reasonable 
	effort to prevent the unauthorized use and distribution of the 
	proprietary information.

	Trademarks that appear in Mentor Graphics product 
	publications that are not owned by Mentor Graphics are 
	trademarks of their respective owners.


                       VHDL Procedural Interface (VHPI)
                       ================================


VHPI IMPLEMENTATION
===================

  The QuestaSim implementation of the VHDL VHPI is based on Draft 4 of the
  VHPI Standard Specification.

  As of QuestaSim version 5.8a the VHPI is partially implemented as
  indicated below.


The following functions are fully implemented:
---------------------------------------------

  *  vhpi_assert()

  *  vhpi_chk_error()

  *  vhpi_printf()

  *  vhpi_vprintf()


The following functions are partially implemented:
-------------------------------------------------

  *  vhpi_control()

     o Fully implemented only for vhpiStop.

     o The vhpiFinish functionality is the same as vhpiStop.

     o Not implemented for vhpiReset because QuestaSim has no concept of reset.

  *  vhpi_get_time()

     o Cannot return the absolute number of simulation delta cycles if the
       time_p parameter is NULL and the cycles_p parameter is non-NULL.


The following functions have not yet been implemented:
-----------------------------------------------------

  *  vhpi_compare_handles()

  *  vhpi_create()

  *  vhpi_disable_cb()

  *  vhpi_enable_cb()

  *  vhpi_format_value()

  *  vhpi_get()

  *  vhpi_get_cb_info()

  *  vhpi_get_data()

  *  vhpi_get_foreignf_info()

  *  vhpi_get_phys()

  *  vhpi_get_real()

  *  vhpi_get_str()

  *  vhpi_get_next_time()

  *  vhpi_get_value()

  *  vhpi_handle()

  *  vhpi_handle_by_index()

  *  vhpi_handle_by_name()

  *  vhpi_iterator()

  *  vhpi_protected_call()

  *  vhpi_put_data()

  *  vhpi_put_value()

  *  vhpi_register_cb()

  *  vhpi_register_foreignf()

  *  vhpi_release_handle()

  *  vhpi_remove_cb()

  *  vhpi_scan()

  *  vhpi_schedule_transaction()


Other information:
-----------------

  Instantiation of foreign architectures and subprograms via the VHPI method
  specified in the standard has not been implemented.  Foreign architectures
  and subprograms must be specified via the traditional QuestaSim (FLI) foreign
  attribute method or the -foreign option to vsim.  However, once the foreign
  C code has been loaded and the foreign architecture initialization function
  or foreign subprogram C code has been called, any currently implemented VHPI
  functions can be called.

  WARNING:  The VHPI interface is subject to change without notice due to the
  evolutionary nature of the draft standard.  Any VHPI code that you write
  may need to be updated as the draft standard changes.
